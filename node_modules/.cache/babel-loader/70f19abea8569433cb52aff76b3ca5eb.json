{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/ben/flatiron/work/mod5/moon-gwent/frontend/src/containers/GameBoard.js\",\n    _s = $RefreshSig$();\n\nimport { Container, Row, Col } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect, useState } from 'react';\nimport history from '../history';\nimport Battlefield from './Battlefield';\nimport PlayerInfo from './PlayerInfo';\nimport DeckInfo from './DeckInfo';\nimport VictoryModal from '../components/VictoryModal';\nimport LossModal from '../components/LossModal';\nimport PassModal from '../components/PassModal';\n\nfunction GameBoard() {\n  _s();\n\n  const dispatch = useDispatch();\n  const userScore = useSelector(state => state.userScore);\n  const enemyScore = useSelector(state => state.enemyScore);\n  const userReactors = useSelector(state => state.userReactors);\n  const enemyReactors = useSelector(state => state.enemyReactors);\n  const userPass = useSelector(state => state.userPass);\n  const enemyPass = useSelector(state => state.enemyPass);\n  const [victoryModalShow, setVictoryModalShow] = useState(false);\n  const [lossModalShow, setLossModalShow] = useState(false);\n  const [passModalShow, setPassModalShow] = useState(false);\n  const [passingPlayer, setPassingPlayer] = useState('');\n  const [roundModalShow, setRoundModalShow] = useState(false);\n  const [result, setResult] = useState(''); //if one side's reactors are down, end the game \n\n  useEffect(() => {\n    if (enemyReactors === 0) {\n      setVictoryModalShow(true);\n    } else if (userReactors === 0) {\n      setLossModalShow(true);\n    }\n  }, [userReactors, enemyReactors]);\n  useEffect(() => {\n    if (userPass) {\n      setPassingPlayer('Player');\n      setPassModalShow(true);\n      setTimeout(() => {\n        setPassModalShow(false);\n\n        if (userPass && enemyPass) {\n          setRoundModalShow(true);\n          result = userScore > enemyScore ? 'won' : 'lost';\n          setTimeout(() => {\n            dispatch({\n              type: 'ROUND_OVER'\n            });\n            dispatch({\n              type: 'RESET_BOARD'\n            });\n          }, 1000);\n        }\n      }, 1000);\n    }\n  }, [userPass]);\n  useEffect(() => {\n    if (enemyPass) {\n      setPassingPlayer('Enemy');\n      setPassModalShow(true);\n      setTimeout(() => {\n        setPassModalShow(false);\n\n        if (userPass && enemyPass) {\n          dispatch({\n            type: 'ROUND_OVER'\n          });\n          dispatch({\n            type: 'RESET_BOARD'\n          });\n        }\n      }, 1000);\n    }\n  }, [enemyPass]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    fluid: true,\n    className: \"gameboard\",\n    children: [/*#__PURE__*/_jsxDEV(VictoryModal, {\n      show: victoryModalShow\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(LossModal, {\n      show: lossModalShow\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(PassModal, {\n      show: passModalShow,\n      player: passingPlayer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        xs: 3,\n        children: /*#__PURE__*/_jsxDEV(PlayerInfo, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        xs: 7,\n        className: \"battlefield\",\n        children: /*#__PURE__*/_jsxDEV(Battlefield, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        xs: 2,\n        children: /*#__PURE__*/_jsxDEV(DeckInfo, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }, this);\n}\n\n_s(GameBoard, \"GJ0FXIZmbdLjr4w+vxZ8QLGGF8Q=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = GameBoard;\nexport default GameBoard;\n\nvar _c;\n\n$RefreshReg$(_c, \"GameBoard\");","map":{"version":3,"sources":["/Users/ben/flatiron/work/mod5/moon-gwent/frontend/src/containers/GameBoard.js"],"names":["Container","Row","Col","useDispatch","useSelector","useEffect","useState","history","Battlefield","PlayerInfo","DeckInfo","VictoryModal","LossModal","PassModal","GameBoard","dispatch","userScore","state","enemyScore","userReactors","enemyReactors","userPass","enemyPass","victoryModalShow","setVictoryModalShow","lossModalShow","setLossModalShow","passModalShow","setPassModalShow","passingPlayer","setPassingPlayer","roundModalShow","setRoundModalShow","result","setResult","setTimeout","type"],"mappings":"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","sourcesContent":["import { Container, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useEffect, useState } from 'react'\nimport history from '../history'\n\nimport Battlefield from './Battlefield'\nimport PlayerInfo from './PlayerInfo'\nimport DeckInfo from './DeckInfo'\nimport VictoryModal from '../components/VictoryModal'\nimport LossModal from '../components/LossModal'\nimport PassModal from '../components/PassModal'\n\nfunction GameBoard() {\n    const dispatch = useDispatch();\n\n    const userScore = useSelector((state) => state.userScore)\n    const enemyScore = useSelector((state) => state.enemyScore)\n    const userReactors = useSelector((state) => state.userReactors)\n    const enemyReactors = useSelector((state) => state.enemyReactors)\n    const userPass = useSelector((state) => state.userPass)\n    const enemyPass = useSelector((state) => state.enemyPass)\n    const [victoryModalShow, setVictoryModalShow] = useState(false)\n    const [lossModalShow, setLossModalShow] = useState(false)\n    const [passModalShow, setPassModalShow] = useState(false)\n    const [passingPlayer, setPassingPlayer] = useState('')\n    const [roundModalShow, setRoundModalShow] = useState(false)\n    const [result, setResult] = useState('')\n\n    //if one side's reactors are down, end the game \n    useEffect(() => {\n        if (enemyReactors === 0) {\n            setVictoryModalShow(true)\n        }\n        else if (userReactors === 0) {\n            setLossModalShow(true)\n        }\n    }, [userReactors, enemyReactors])\n\n    useEffect(() => {\n        if (userPass) {\n            setPassingPlayer('Player')\n            setPassModalShow(true)\n            setTimeout(() => {\n                setPassModalShow(false);\n                if (userPass && enemyPass) {\n                    setRoundModalShow(true)\n                    result = (userScore>enemyScore?'won':'lost')\n                    setTimeout(() => {\n                        dispatch({ type: 'ROUND_OVER' })\n                        dispatch({ type: 'RESET_BOARD' })\n                    },1000)\n                }\n            }, 1000)\n        }\n    }, [userPass])\n\n    useEffect(() => {\n        if (enemyPass) {\n            setPassingPlayer('Enemy')\n            setPassModalShow(true)\n            setTimeout(() => {\n                setPassModalShow(false);\n                if (userPass && enemyPass) {\n                    dispatch({ type: 'ROUND_OVER' })\n                    dispatch({ type: 'RESET_BOARD' })\n                }\n            }, 1000)\n        }\n    }, [enemyPass])\n\n    return (\n        <Container fluid className=\"gameboard\">\n            <VictoryModal\n                show={victoryModalShow} />\n\n            <LossModal\n                show={lossModalShow} />\n\n            <PassModal\n                show={passModalShow}\n                player={passingPlayer} />\n\n            \n            <Row>\n                <Col xs={3}>\n                    <PlayerInfo />\n                </Col>\n                <Col xs={7} className=\"battlefield\">\n                    <Battlefield />\n                </Col>\n                <Col xs={2}>\n                    <DeckInfo />\n                </Col>\n            </Row>\n        </Container>\n    )\n}\n\nexport default GameBoard;"]},"metadata":{},"sourceType":"module"}