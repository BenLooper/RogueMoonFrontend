{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/ben/flatiron/work/mod5/moon-gwent/frontend/src/App.js\",\n    _s = $RefreshSig$();\n\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Provider } from 'react-redux';\nimport { store } from './store';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Route, Router } from 'react-router';\nimport { useEffect } from 'react';\nimport history from './history';\nimport Login from './components/Login.js';\nimport Home from './';\nimport GameBoard from './containers/GameBoard';\n\nconst App = () => {\n  _s();\n\n  let dispatch = useDispatch(); //check for token in localStorage\n  //if there is one, fetch it in useEffect()\n  //if not, redirect to login\n\n  useEffect(() => {\n    if (window.localStorage.token) {\n      fetch('http://localhost:3000/auth', {\n        method: 'GET',\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Accept\": \"application/json\",\n          \"Authorization\": `Bearer ${window.localStorage.token}`\n        }\n      }).then(res => res.json()).then(userInfo => {\n        dispatch({\n          type: 'SET_USER',\n          user: userInfo.user,\n          ownedCards: userInfo.cards,\n          games: userInfo.games\n        });\n        history.push('/');\n      });\n    } else {\n      history.push('/login');\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(Router, {\n    history: history,\n    children: /*#__PURE__*/_jsxDEV(Provider, {\n      store: store,\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/login\",\n        component: Login\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/\",\n        component: GameBoard\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"rAh3tY+Iv6hWC9AI4Dm+rCbkwNE=\", false, function () {\n  return [useDispatch];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/ben/flatiron/work/mod5/moon-gwent/frontend/src/App.js"],"names":["Provider","store","useSelector","useDispatch","Route","Router","useEffect","history","Login","Home","GameBoard","App","dispatch","window","localStorage","token","fetch","method","headers","then","res","json","userInfo","type","user","ownedCards","cards","games","push"],"mappings":";;;;;;AACA,OAAO,WAAP;AACA,OAAO,sCAAP;AAEA,SAASA,QAAT,QAAyB,aAAzB;AACA,SAASC,KAAT,QAAsB,SAAtB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,cAA9B;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,OAAOC,OAAP,MAAoB,WAApB;AAEA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,OAAOC,IAAP,MAAiB,IAAjB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;;AAGA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAEhB,MAAIC,QAAQ,GAAGT,WAAW,EAA1B,CAFgB,CAGhB;AACA;AACA;;AACAG,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIO,MAAM,CAACC,YAAP,CAAoBC,KAAxB,EAA+B;AAC7BC,MAAAA,KAAK,CAAC,4BAAD,EAA8B;AACjCC,QAAAA,MAAM,EAAE,KADyB;AAEjCC,QAAAA,OAAO,EAAE;AACP,0BAAgB,kBADT;AAEP,oBAAU,kBAFH;AAGP,2BAAkB,UAASL,MAAM,CAACC,YAAP,CAAoBC,KAAM;AAH9C;AAFwB,OAA9B,CAAL,CAQCI,IARD,CAQMC,GAAG,IAAEA,GAAG,CAACC,IAAJ,EARX,EASCF,IATD,CASMG,QAAQ,IAAI;AAChBV,QAAAA,QAAQ,CAAC;AAACW,UAAAA,IAAI,EAAE,UAAP;AAAmBC,UAAAA,IAAI,EAACF,QAAQ,CAACE,IAAjC;AAAuCC,UAAAA,UAAU,EAACH,QAAQ,CAACI,KAA3D;AAAkEC,UAAAA,KAAK,EAACL,QAAQ,CAACK;AAAjF,SAAD,CAAR;AACApB,QAAAA,OAAO,CAACqB,IAAR,CAAa,GAAb;AACD,OAZD;AAaD,KAdD,MAeK;AACHrB,MAAAA,OAAO,CAACqB,IAAR,CAAa,QAAb;AACD;AACF,GAnBQ,CAAT;AAqBA,sBACE,QAAC,MAAD;AAAQ,IAAA,OAAO,EAAErB,OAAjB;AAAA,2BACE,QAAC,QAAD;AAAU,MAAA,KAAK,EAAEN,KAAjB;AAAA,8BACE,QAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAC,QAAlB;AAA2B,QAAA,SAAS,EAAEO;AAAtC;AAAA;AAAA;AAAA;AAAA,cADF,eAGE,QAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAC,GAAlB;AAAsB,QAAA,SAAS,EAAEE;AAAjC;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CApCD;;GAAMC,G;UAEWR,W;;;KAFXQ,G;AAsCN,eAAeA,GAAf","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport { Provider } from 'react-redux'\nimport { store } from './store'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport { Route, Router } from 'react-router'\nimport { useEffect } from 'react'\nimport history from './history'\n\nimport Login from './components/Login.js'\nimport Home from './'\nimport GameBoard from './containers/GameBoard'\n\n\nconst App = () => {\n\n  let dispatch = useDispatch()\n  //check for token in localStorage\n  //if there is one, fetch it in useEffect()\n  //if not, redirect to login\n  useEffect(() => {\n    if (window.localStorage.token) {\n      fetch('http://localhost:3000/auth',{\n        method: 'GET',\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Accept\": \"application/json\",\n          \"Authorization\": `Bearer ${window.localStorage.token}`\n        }\n      })\n      .then(res=>res.json())\n      .then(userInfo => {\n        dispatch({type: 'SET_USER', user:userInfo.user, ownedCards:userInfo.cards, games:userInfo.games})\n        history.push('/')\n      })\n    }\n    else {\n      history.push('/login')\n    }\n  })\n\n  return (\n    <Router history={history}>\n      <Provider store={store}>\n        <Route exact path='/login' component={Login} />\n        {/* Root is gameboard atm, this will change when I add campaign board */}\n        <Route exact path='/' component={GameBoard} />\n      </Provider>\n    </Router >\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}