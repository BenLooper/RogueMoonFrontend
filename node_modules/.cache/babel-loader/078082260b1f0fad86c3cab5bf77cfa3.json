{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/ben/flatiron/work/mod5/moon-gwent/frontend/src/containers/Battlefield.js\",\n    _s = $RefreshSig$();\n\nimport { Container, Row, Col, CardGroup } from 'react-bootstrap';\nimport { useSelector } from 'react-redux';\nimport UnitCard from '../components/UnitCard.js';\n\nfunction Battlefield() {\n  _s();\n\n  //Eventually, these \"playCards\" will be chosen in a pre-battle selection screen \n  //That will be a container, outside of gameboard that sets state\n  //For now, I'll just render the cards here. In the future, they'll be rendered there\n  const ownedCards = useSelector(state => state.ownedCards);\n  const playCards = ownedCards.map(card => /*#__PURE__*/_jsxDEV(UnitCard, {\n    card: card\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 46\n  }, this));\n  return (\n    /*#__PURE__*/\n    //These rows populate with played cards\n    //Furthest left is total strength, then active buff, then cards\n    _jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        className: \"card-tray\",\n        children: /*#__PURE__*/_jsxDEV(Col, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        className: \"card-tray\",\n        children: /*#__PURE__*/_jsxDEV(Col, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        className: \"card-tray\",\n        children: /*#__PURE__*/_jsxDEV(Col, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        className: \"card-tray\",\n        children: /*#__PURE__*/_jsxDEV(Col, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        className: \"card-tray\",\n        children: /*#__PURE__*/_jsxDEV(Col, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        className: \"card-tray\",\n        children: [/*#__PURE__*/_jsxDEV(Col, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 17\n        }, this), playCards.slice(5, 6)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        className: \"card-tray\",\n        children: playCards.slice(5, 10)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this)\n  );\n}\n\n_s(Battlefield, \"3EkxY5N9i4buu9qr/Y9256QaiUU=\", false, function () {\n  return [useSelector];\n});\n\n_c = Battlefield;\nexport default Battlefield;\n\nvar _c;\n\n$RefreshReg$(_c, \"Battlefield\");","map":{"version":3,"sources":["/Users/ben/flatiron/work/mod5/moon-gwent/frontend/src/containers/Battlefield.js"],"names":["Container","Row","Col","CardGroup","useSelector","UnitCard","Battlefield","ownedCards","state","playCards","map","card","slice"],"mappings":";;;;;AAAA,SAASA,SAAT,EAAoBC,GAApB,EAAyBC,GAAzB,EAA8BC,SAA9B,QAA+C,iBAA/C;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,QAAP,MAAqB,2BAArB;;AAEA,SAASC,WAAT,GAAuB;AAAA;;AAEnB;AACA;AACA;AAEA,QAAMC,UAAU,GAAGH,WAAW,CAAEI,KAAD,IAAWA,KAAK,CAACD,UAAlB,CAA9B;AACA,QAAME,SAAS,GAAGF,UAAU,CAACG,GAAX,CAAeC,IAAI,iBAAI,QAAC,QAAD;AAAU,IAAA,IAAI,EAAEA;AAAhB;AAAA;AAAA;AAAA;AAAA,UAAvB,CAAlB;AACA;AAAA;AACI;AACA;AACA,YAAC,SAAD;AAAA,8BACI,QAAC,GAAD;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,+BACI,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAKI,QAAC,GAAD;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,+BACI,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cALJ,eASI,QAAC,GAAD;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,+BACI,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cATJ,eAaI;AAAA;AAAA;AAAA;AAAA,cAbJ,eAcI,QAAC,GAAD;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,+BACI,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAdJ,eAkBI,QAAC,GAAD;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,+BACI,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAlBJ,eAsBI,QAAC,GAAD;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,gCACI,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEKF,SAAS,CAACG,KAAV,CAAgB,CAAhB,EAAkB,CAAlB,CAFL;AAAA;AAAA;AAAA;AAAA;AAAA,cAtBJ,eA0BI;AAAA;AAAA;AAAA;AAAA,cA1BJ,eA4BI,QAAC,GAAD;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,kBACKH,SAAS,CAACG,KAAV,CAAgB,CAAhB,EAAkB,EAAlB;AADL;AAAA;AAAA;AAAA;AAAA,cA5BJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAHJ;AAoCH;;GA5CQN,W;UAMcF,W;;;KANdE,W;AA8CT,eAAeA,WAAf","sourcesContent":["import { Container, Row, Col, CardGroup } from 'react-bootstrap'\nimport { useSelector } from 'react-redux'\nimport UnitCard from '../components/UnitCard.js'\n\nfunction Battlefield() {\n\n    //Eventually, these \"playCards\" will be chosen in a pre-battle selection screen \n    //That will be a container, outside of gameboard that sets state\n    //For now, I'll just render the cards here. In the future, they'll be rendered there\n\n    const ownedCards = useSelector((state) => state.ownedCards)\n    const playCards = ownedCards.map(card => <UnitCard card={card} />)\n    return (\n        //These rows populate with played cards\n        //Furthest left is total strength, then active buff, then cards\n        <Container >\n            <Row className=\"card-tray\">\n                <Col></Col>\n                \n            </Row>\n            <Row className=\"card-tray\">\n                <Col></Col>\n\n            </Row>\n            <Row className=\"card-tray\">\n                <Col></Col>\n\n            </Row>\n            <br></br>\n            <Row className=\"card-tray\">\n                <Col></Col>\n\n            </Row>\n            <Row className=\"card-tray\">\n                <Col></Col>\n\n            </Row>\n            <Row className=\"card-tray\">\n                <Col></Col>\n                {playCards.slice(5,6)}\n            </Row>\n            <br></br>\n            {/* This row populates with cards drawn from a users deck.  */}\n            <Row className=\"card-tray\">\n                {playCards.slice(5,10)}\n            </Row>\n        </Container>\n    )\n}\n\nexport default Battlefield;"]},"metadata":{},"sourceType":"module"}