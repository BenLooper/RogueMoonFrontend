{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/ben/flatiron/work/mod5/moon-gwent/frontend/src/components/UnitCard.js\",\n    _s = $RefreshSig$();\n\nimport { Card } from 'react-bootstrap';\nimport { useSelector, useDispatch } from 'react-redux';\n\nconst UnitCard = ({\n  card,\n  hand\n}) => {\n  _s();\n\n  const dispatch = useDispatch();\n  const env = useSelector(state => state.env);\n  let conditions = env.map(card => card.ability);\n  let oldStrength = card.strength;\n\n  const playCard = () => {\n    let role = card.role;\n\n    if (role == 'env') {\n      //if it's an env card, put it in the shared env row\n      dispatch({\n        type: \"PLAY_ENV\",\n        card: card\n      });\n    } else {\n      //puts the card in the correct array inside field \n      dispatch({\n        type: \"PLAY_CARD\",\n        role: role,\n        card: card\n      });\n    } //if a card has an ability, dispatch that ability \n    // if (card.ability) {\n    //     dispatch({ type: card.ability.toUpperCase() })\n    // }\n\n  };\n\n  switch (card.role) {\n    case 'foot' && conditions.includes('cold'):\n      card.strength = 1;\n      break;\n\n    case 'ground' && conditions.includes('rocky'):\n      card.strength = 1;\n      break;\n\n    case 'space' && conditions.includes('flare'):\n      card.strength = 1;\n      break;\n\n    default:\n      card.strength = oldStrength;\n  }\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"unit-card\",\n    onClick: hand ? () => playCard() : null,\n    children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n      variant: \"top\",\n      src: card.image\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Card.ImgOverlay, {\n      children: [/*#__PURE__*/_jsxDEV(Card.Text, {\n        className: \"strength\",\n        children: card.strength\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n        className: \"role\",\n        children: card.role\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n        className: \"ability\",\n        children: card.ability\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n\n_s(UnitCard, \"vPbtYxHBOUmaqqMVPdXFGsN/eWQ=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = UnitCard;\nexport default UnitCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"UnitCard\");","map":{"version":3,"sources":["/Users/ben/flatiron/work/mod5/moon-gwent/frontend/src/components/UnitCard.js"],"names":["Card","useSelector","useDispatch","UnitCard","card","hand","dispatch","env","state","conditions","map","ability","oldStrength","strength","playCard","role","type","includes","image"],"mappings":";;;;;AAAA,SAASA,IAAT,QAAqB,iBAArB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAD,KAAoB;AAAA;;AAEjC,QAAMC,QAAQ,GAAGJ,WAAW,EAA5B;AACA,QAAMK,GAAG,GAAGN,WAAW,CAAEO,KAAD,IAAWA,KAAK,CAACD,GAAlB,CAAvB;AACA,MAAIE,UAAU,GAAGF,GAAG,CAACG,GAAJ,CAAQN,IAAI,IAAIA,IAAI,CAACO,OAArB,CAAjB;AACA,MAAIC,WAAW,GAAGR,IAAI,CAACS,QAAvB;;AAEA,QAAMC,QAAQ,GAAG,MAAM;AACnB,QAAIC,IAAI,GAAGX,IAAI,CAACW,IAAhB;;AACA,QAAIA,IAAI,IAAI,KAAZ,EAAmB;AACf;AACAT,MAAAA,QAAQ,CAAC;AAAEU,QAAAA,IAAI,EAAE,UAAR;AAAoBZ,QAAAA,IAAI,EAAEA;AAA1B,OAAD,CAAR;AACH,KAHD,MAIK;AACD;AACAE,MAAAA,QAAQ,CAAC;AAAEU,QAAAA,IAAI,EAAE,WAAR;AAAqBD,QAAAA,IAAI,EAAEA,IAA3B;AAAiCX,QAAAA,IAAI,EAAEA;AAAvC,OAAD,CAAR;AACH,KATkB,CAUnB;AACA;AACA;AACA;;AACH,GAdD;;AAgBA,UAAQA,IAAI,CAACW,IAAb;AACI,SAAK,UAAUN,UAAU,CAACQ,QAAX,CAAoB,MAApB,CAAf;AACIb,MAAAA,IAAI,CAACS,QAAL,GAAgB,CAAhB;AACA;;AACJ,SAAK,YAAYJ,UAAU,CAACQ,QAAX,CAAoB,OAApB,CAAjB;AACIb,MAAAA,IAAI,CAACS,QAAL,GAAgB,CAAhB;AACA;;AACJ,SAAK,WAAWJ,UAAU,CAACQ,QAAX,CAAoB,OAApB,CAAhB;AACIb,MAAAA,IAAI,CAACS,QAAL,GAAgB,CAAhB;AACA;;AACJ;AACIT,MAAAA,IAAI,CAACS,QAAL,GAAgBD,WAAhB;AAXR;;AAcA,sBACI,QAAC,IAAD;AAAM,IAAA,SAAS,EAAC,WAAhB;AAA4B,IAAA,OAAO,EAAEP,IAAI,GAAG,MAAMS,QAAQ,EAAjB,GAAsB,IAA/D;AAAA,4BACI,QAAC,IAAD,CAAM,GAAN;AAAU,MAAA,OAAO,EAAC,KAAlB;AAAwB,MAAA,GAAG,EAAEV,IAAI,CAACc;AAAlC;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,IAAD,CAAM,UAAN;AAAA,8BACI,QAAC,IAAD,CAAM,IAAN;AAAW,QAAA,SAAS,EAAC,UAArB;AAAA,kBAAiCd,IAAI,CAACS;AAAtC;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,IAAD,CAAM,IAAN;AAAW,QAAA,SAAS,EAAC,MAArB;AAAA,kBAA6BT,IAAI,CAACW;AAAlC;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI,QAAC,IAAD,CAAM,IAAN;AAAW,QAAA,SAAS,EAAC,SAArB;AAAA,kBAAgCX,IAAI,CAACO;AAArC;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH,CApDD;;GAAMR,Q;UAEeD,W,EACLD,W;;;KAHVE,Q;AAsDN,eAAeA,QAAf","sourcesContent":["import { Card } from 'react-bootstrap'\nimport { useSelector, useDispatch } from 'react-redux'\n\nconst UnitCard = ({ card, hand }) => {\n\n    const dispatch = useDispatch()\n    const env = useSelector((state) => state.env)\n    let conditions = env.map(card => card.ability)\n    let oldStrength = card.strength\n    \n    const playCard = () => {\n        let role = card.role\n        if (role == 'env') {\n            //if it's an env card, put it in the shared env row\n            dispatch({ type: \"PLAY_ENV\", card: card })\n        }\n        else {\n            //puts the card in the correct array inside field \n            dispatch({ type: \"PLAY_CARD\", role: role, card: card })\n        }\n        //if a card has an ability, dispatch that ability \n        // if (card.ability) {\n        //     dispatch({ type: card.ability.toUpperCase() })\n        // }\n    }\n\n    switch (card.role) {\n        case 'foot' && conditions.includes('cold'):\n            card.strength = 1\n            break;\n        case 'ground' && conditions.includes('rocky'):\n            card.strength = 1 \n            break;\n        case 'space' && conditions.includes('flare'):\n            card.strength = 1 \n            break;\n        default:\n            card.strength = oldStrength   \n    }\n\n    return (\n        <Card className=\"unit-card\" onClick={hand ? () => playCard() : null}>\n            <Card.Img variant='top' src={card.image} />\n            <Card.ImgOverlay>\n                <Card.Text className=\"strength\">{card.strength}</Card.Text>\n                <Card.Text className=\"role\">{card.role}</Card.Text>\n                <Card.Text className=\"ability\">{card.ability}</Card.Text>\n            </Card.ImgOverlay>\n            {/* <Card.Body className=\"text-center\">\n                <Card.Title>{card.name}</Card.Title>\n                <Card.Subtitle>{card.ability}</Card.Subtitle>\n                <Card.Text>{card.flavor_text}</Card.Text>\n            </Card.Body> */}\n        </Card>\n    )\n}\n\nexport default UnitCard;"]},"metadata":{},"sourceType":"module"}