{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/ben/flatiron/work/mod5/moon-gwent/frontend/src/containers/Battlefield.js\",\n    _s = $RefreshSig$();\n\nimport { Container, Row, Col, CardGroup } from 'react-bootstrap';\nimport { useSelector, useDispatch } from 'react-redux';\nimport UnitCard from '../components/UnitCard.js';\n\nfunction Battlefield() {\n  _s();\n\n  //Eventually, these \"playCards\" will be chosen in a pre-battle selection screen \n  //That will be a container, outside of gameboard that sets state\n  //For now, I'll just create the cards here. In the future, they'll be created there\n  const dispatch = useDispatch();\n  const ownedCards = useSelector(state => state.ownedCards);\n  const gameCards = ownedCards.map(card => /*#__PURE__*/_jsxDEV(UnitCard, {\n    card: card,\n    playCard: playCard\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 46\n  }, this));\n  const enemySpace = useSelector(state => state.enemySpace);\n  const enemyGround = useSelector(state => state.enemyGround);\n  const enemyFoot = useSelector(state => state.enemyFoot);\n  const userFoot = useSelector(state => state.userFoot);\n  const userGround = useSelector(state => state.userGround);\n  const userSpace = useSelector(state => state.userSpace);\n\n  const playCard = card => {\n    let role = capitalize(card.role);\n    dispatch({\n      type: \"UPDATE_BOARD\",\n      role: role,\n      card: card\n    });\n  };\n\n  const capitalize = str => {\n    const lower = str.toLowerCase();\n    return str.charAt(0).toUpperCase() + lower.slice(1);\n  };\n\n  return (\n    /*#__PURE__*/\n    //These rows populate with played cards\n    //Furthest left is total strength, then active buff, then cards\n    _jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          style: {\n            border: 'solid'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xs: 10,\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            className: \"card-tray\",\n            children: enemySpace\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          style: {\n            border: 'solid'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xs: 10,\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            className: \"card-tray\",\n            children: enemyGround\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          style: {\n            border: 'solid'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xs: 10,\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            className: \"card-tray\",\n            children: enemyFoot\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          style: {\n            border: 'solid'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xs: 10,\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            className: \"card-tray\",\n            children: userFoot.map(card => /*#__PURE__*/_jsxDEV(UnitCard, {\n              card: card\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 68\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          style: {\n            border: 'solid'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xs: 10,\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            className: \"card-tray\",\n            children: userGround.map(card => /*#__PURE__*/_jsxDEV(UnitCard, {\n              card: card\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 70\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          style: {\n            border: 'solid'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xs: 10,\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            className: \"card-tray\",\n            children: userSpace.map(card => /*#__PURE__*/_jsxDEV(UnitCard, {\n              card: card\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 69\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        className: \"card-tray\",\n        children: gameCards.slice(5, 10)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this)\n  );\n}\n\n_s(Battlefield, \"b/cewyxeCIpmobXphCZIR6w6BsA=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = Battlefield;\nexport default Battlefield;\n\nvar _c;\n\n$RefreshReg$(_c, \"Battlefield\");","map":{"version":3,"sources":["/Users/ben/flatiron/work/mod5/moon-gwent/frontend/src/containers/Battlefield.js"],"names":["Container","Row","Col","CardGroup","useSelector","useDispatch","UnitCard","Battlefield","dispatch","ownedCards","state","gameCards","map","card","playCard","enemySpace","enemyGround","enemyFoot","userFoot","userGround","userSpace","role","capitalize","type","str","lower","toLowerCase","charAt","toUpperCase","slice","border"],"mappings":"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","sourcesContent":["import { Container, Row, Col, CardGroup } from 'react-bootstrap'\nimport { useSelector, useDispatch } from 'react-redux'\nimport UnitCard from '../components/UnitCard.js'\n\nfunction Battlefield() {\n\n    //Eventually, these \"playCards\" will be chosen in a pre-battle selection screen \n    //That will be a container, outside of gameboard that sets state\n    //For now, I'll just create the cards here. In the future, they'll be created there\n    \n    const dispatch = useDispatch()\n    const ownedCards = useSelector((state) => state.ownedCards)\n    const gameCards = ownedCards.map(card => <UnitCard card={card} playCard={playCard}/>)\n\n    const enemySpace = useSelector((state) => state.enemySpace)\n    const enemyGround = useSelector((state) => state.enemyGround)\n    const enemyFoot = useSelector((state) => state.enemyFoot)\n    const userFoot = useSelector((state) => state.userFoot)\n    const userGround = useSelector((state) => state.userGround)\n    const userSpace = useSelector((state) => state.userSpace)\n\n    const playCard = (card) => {\n        let role = capitalize(card.role)\n        dispatch({type:\"UPDATE_BOARD\", role:role, card:card})\n    }\n\n    const capitalize = (str) => {\n        const lower =  str.toLowerCase()\n        return str.charAt(0).toUpperCase() + lower.slice(1)\n    }\n\n    return (\n        //These rows populate with played cards\n        //Furthest left is total strength, then active buff, then cards\n        <Container >\n            <Row>\n                <Col style={{border:'solid'}}>\n                    \n                </Col>\n                <Col xs={10}>\n                    <Row className=\"card-tray\">{enemySpace}</Row>\n                </Col>\n\n            </Row>\n            <Row>\n                <Col style={{border:'solid'}}>\n                </Col>\n                <Col xs={10}>\n                    <Row className=\"card-tray\">{enemyGround}</Row>\n                </Col>\n\n            </Row>\n            <Row>\n                <Col style={{border:'solid'}}>\n                </Col>\n                <Col xs={10}>\n                    <Row className=\"card-tray\">{enemyFoot}</Row>\n                </Col>\n\n            </Row>\n            <br></br>\n            <Row>\n                <Col style={{border:'solid'}}>\n                </Col>\n                <Col xs={10}>\n                    <Row className=\"card-tray\">{userFoot.map(card=><UnitCard card={card}/>)}</Row>\n                </Col>\n\n            </Row>\n            <Row>\n                <Col style={{border:'solid'}}>\n                </Col>\n                <Col xs={10}>\n                    <Row className=\"card-tray\">{userGround.map(card=><UnitCard card={card}/>)}</Row>\n                </Col>\n\n            </Row>\n            <Row>\n                <Col style={{border:'solid'}}>\n                    \n                </Col>\n                <Col xs={10}>\n                    <Row className=\"card-tray\">{userSpace.map(card=><UnitCard card={card}/>)}</Row>\n                </Col>\n\n            </Row>\n            <br></br>\n            {/* This row populates with cards drawn from a users deck.  */}\n            <Row className=\"card-tray\">\n                {gameCards.slice(5, 10)}\n            </Row>\n        </Container>\n    )\n}\n\nexport default Battlefield;"]},"metadata":{},"sourceType":"module"}