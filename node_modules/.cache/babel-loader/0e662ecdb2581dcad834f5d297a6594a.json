{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/ben/flatiron/work/mod5/moon-gwent/frontend/src/containers/GameBoard.js\",\n    _s = $RefreshSig$();\n\nimport { Container, Row, Col } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect, useState } from 'react';\nimport history from '../history';\nimport Battlefield from './Battlefield';\nimport PlayerInfo from './PlayerInfo';\nimport DeckInfo from './DeckInfo';\nimport VictoryModal from '../components/VictoryModal';\nimport LossModal from '../components/LossModal';\nimport PassModal from '../components/PassModal';\n\nfunction GameBoard() {\n  _s();\n\n  const dispatch = useDispatch();\n  const userReactors = useSelector(state => state.userReactors);\n  const enemyReactors = useSelector(state => state.enemyReactors);\n  const userPass = useSelector(state => state.userPass);\n  const enemyPass = useSelector(state => state.enemyPass);\n  const [victoryModalShow, setVictoryModalShow] = useState(false);\n  const [lossModalShow, setLossModalShow] = useState(false);\n  const [passModalShow, setPassModalShow] = useState(false);\n  const [passingPlayer, setPassingPlayer] = useState(''); //if one side's reactors are down, end the game \n\n  useEffect(() => {\n    if (enemyReactors === 0) {\n      setVictoryModalShow(true);\n    } else if (userReactors === 0) {\n      setLossModalShow(true);\n    }\n  }, [userReactors, enemyReactors]);\n  useEffect(() => {\n    if (userPass) {\n      setPassingPlayer('Player');\n      setPassModalShow(true);\n      setTimeout(() => {\n        setPassModalShow(false);\n\n        if (userPass && enemyPass) {\n          dispatch({\n            type: 'ROUND_OVER'\n          });\n          dispatch({\n            type: 'RESET_BOARD'\n          });\n        }\n      }, 2000);\n    } else if (enemyPass) {\n      setPassingPlayer('Enemy');\n      setPassModalShow(true);\n      setTimeout(() => {\n        setPassModalShow(false);\n\n        if (userPass && enemyPass) {\n          dispatch({\n            type: 'ROUND_OVER'\n          });\n          dispatch({\n            type: 'RESET_BOARD'\n          });\n        }\n      }, 2000);\n    }\n  }, [userPass, enemyPass]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    fluid: true,\n    className: \"gameboard\",\n    children: [/*#__PURE__*/_jsxDEV(VictoryModal, {\n      show: victoryModalShow\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(LossModal, {\n      show: lossModalShow\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(PassModal, {\n      show: passModalShow,\n      player: passingPlayer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        xs: 3,\n        children: /*#__PURE__*/_jsxDEV(PlayerInfo, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        xs: 7,\n        className: \"battlefield\",\n        children: /*#__PURE__*/_jsxDEV(Battlefield, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        xs: 2,\n        children: /*#__PURE__*/_jsxDEV(DeckInfo, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n}\n\n_s(GameBoard, \"Ip63CLfX3HEAo/b4KxS5Pxx/azE=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = GameBoard;\nexport default GameBoard;\n\nvar _c;\n\n$RefreshReg$(_c, \"GameBoard\");","map":{"version":3,"sources":["/Users/ben/flatiron/work/mod5/moon-gwent/frontend/src/containers/GameBoard.js"],"names":["Container","Row","Col","useDispatch","useSelector","useEffect","useState","history","Battlefield","PlayerInfo","DeckInfo","VictoryModal","LossModal","PassModal","GameBoard","dispatch","userReactors","state","enemyReactors","userPass","enemyPass","victoryModalShow","setVictoryModalShow","lossModalShow","setLossModalShow","passModalShow","setPassModalShow","passingPlayer","setPassingPlayer","setTimeout","type"],"mappings":"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","sourcesContent":["import { Container, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useEffect, useState } from 'react'\nimport history from '../history'\n\nimport Battlefield from './Battlefield'\nimport PlayerInfo from './PlayerInfo'\nimport DeckInfo from './DeckInfo'\nimport VictoryModal from '../components/VictoryModal'\nimport LossModal from '../components/LossModal'\nimport PassModal from '../components/PassModal'\n\nfunction GameBoard() {\n    const dispatch = useDispatch();\n\n    const userReactors = useSelector((state) => state.userReactors)\n    const enemyReactors = useSelector((state) => state.enemyReactors)\n    const userPass = useSelector((state) => state.userPass)\n    const enemyPass = useSelector((state) => state.enemyPass)\n    const [victoryModalShow, setVictoryModalShow] = useState(false)\n    const [lossModalShow, setLossModalShow] = useState(false)\n    const [passModalShow, setPassModalShow] = useState(false)\n    const [passingPlayer, setPassingPlayer] = useState('')\n\n    //if one side's reactors are down, end the game \n    useEffect(() => {\n        if (enemyReactors === 0) {\n            setVictoryModalShow(true)\n        }\n        else if (userReactors === 0) {\n            setLossModalShow(true)\n        }\n    }, [userReactors, enemyReactors])\n\n    useEffect(() => {\n        if (userPass) {\n            setPassingPlayer('Player')\n            setPassModalShow(true)\n            setTimeout(() => { \n                setPassModalShow(false);\n                if (userPass && enemyPass) {\n                    dispatch({ type: 'ROUND_OVER' })\n                    dispatch({ type: 'RESET_BOARD' })\n                }\n            }, 2000)\n        }\n        else if (enemyPass) {\n            setPassingPlayer('Enemy')\n            setPassModalShow(true)\n            setTimeout(() => { \n                setPassModalShow(false);\n                if (userPass && enemyPass) {\n                    dispatch({ type: 'ROUND_OVER' })\n                    dispatch({ type: 'RESET_BOARD' })\n                }\n            }, 2000)\n        }\n    }, [userPass, enemyPass])\n\n    return (\n        <Container fluid className=\"gameboard\">\n            <VictoryModal\n                show={victoryModalShow} />\n\n            <LossModal\n                show={lossModalShow} />\n\n            <PassModal\n                show={passModalShow}\n                player={passingPlayer} />\n\n            <Row>\n                <Col xs={3}>\n                    <PlayerInfo />\n                </Col>\n                <Col xs={7} className=\"battlefield\">\n                    <Battlefield />\n                </Col>\n                <Col xs={2}>\n                    <DeckInfo />\n                </Col>\n            </Row>\n        </Container>\n    )\n}\n\nexport default GameBoard;"]},"metadata":{},"sourceType":"module"}