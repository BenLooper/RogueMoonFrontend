{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/ben/flatiron/work/mod5/moon-gwent/frontend/src/containers/PlayerInfo.js\",\n    _s = $RefreshSig$();\n\nimport { Container, Row, Col } from 'react-bootstrap';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\n\nfunction PlayerInfo() {\n  _s();\n\n  const dispatch = useDispatch();\n  const games = useSelector(state => state.games);\n  const gameOn = useSelector(state => state.gameOn);\n  const userScore = useSelector(state => state.userScore);\n  const enemyScore = useSelector(state => state.enemyScore);\n  const userPass = useSelector(state => state.userPass);\n  const enemyPass = useSelector(state => state.enemyPass);\n  const userTurn = useSelector(state => state.userTurn);\n  const userReactors = useSelector(state => state.userReactors);\n  const enemyReactors = useSelector(state => state.enemyReactors);\n  const userVictory = useSelector(state => state.userVictory);\n  const hand = useSelector(state => state.hand);\n  const enemyHand = useSelector(state => state.enemyHand);\n  const userField = useSelector(state => state.user);\n\n  const pass = () => {\n    dispatch({\n      type: 'USER_PASS'\n    });\n  };\n\n  const createGame = () => {\n    fetch('http://localhost:3000/games', {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\",\n        \"Authorization\": `Bearer ${window.localStorage.token}`\n      },\n      body: JSON.stringify({\n        game_won: userReactors > enemyReactors ? true : false\n      })\n    }).then(res => res.json()).then(userInfo => {\n      dispatch({\n        type: 'GAME_OVER',\n        userVictory: userInfo.newGame.game_won,\n        games: userInfo.games\n      });\n    });\n  }; //if one side's reactors are down, end the game \n\n\n  useEffect(() => {\n    if (userReactors === 0 || enemyReactors === 0) {\n      createGame();\n    }\n  }, [userReactors, enemyReactors]); //Checks to see if both have passed \n  //End game actually triggered by ROUND_OVER updating reactors \n\n  useEffect(() => {\n    if (userPass && enemyPass) {\n      dispatch({\n        type: 'ROUND_OVER'\n      });\n      dispatch({\n        type: 'RESET_BOARD'\n      });\n    }\n  }, [userPass, enemyPass]); //Runs enemy turn if user passes\n\n  useEffect(() => {\n    if (userTurn === false) {\n      let counter = Math.floor(Math.random() * enemyHand.length + 1);\n\n      while (counter > 0) {\n        dispatch({\n          type: 'ENEMY_PLAY'\n        });\n        counter -= 1;\n      }\n\n      setTimeout(() => dispatch({\n        type: 'ENEMY_PASS'\n      }), 4000);\n    }\n  }, [userTurn]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"User Score: \", userScore]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Enemy Score: \", enemyScore]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"User cards in hand: \", hand.length]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Enemy cards in hand: \", enemyHand.length]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"User Reactors Left: \", userReactors]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Enemy Reactors Left: \", enemyReactors]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            className: \"card-tray\",\n            children: \" \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Turn: \", userTurn ? 'User' : 'Enemy']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"User Passed: \", userPass ? 'Yes' : 'No']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Enemy Passed: \", enemyPass ? 'Yes' : 'No']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: pass,\n      children: \"Pass\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Games Played: \", games.length]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"GAME WINNER: \", userVictory && userVictory !== null ? 'User' : 'Enemy']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 9\n  }, this);\n}\n\n_s(PlayerInfo, \"6g+/bwMDwk/9m6pOpOInQo5SE2I=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = PlayerInfo;\nexport default PlayerInfo;\n\nvar _c;\n\n$RefreshReg$(_c, \"PlayerInfo\");","map":{"version":3,"sources":["/Users/ben/flatiron/work/mod5/moon-gwent/frontend/src/containers/PlayerInfo.js"],"names":["Container","Row","Col","useSelector","useDispatch","useEffect","PlayerInfo","dispatch","games","state","gameOn","userScore","enemyScore","userPass","enemyPass","userTurn","userReactors","enemyReactors","userVictory","hand","enemyHand","userField","user","pass","type","createGame","fetch","method","headers","window","localStorage","token","body","JSON","stringify","game_won","then","res","json","userInfo","newGame","counter","Math","floor","random","length","setTimeout"],"mappings":";;;;;AAAA,SAASA,SAAT,EAAoBC,GAApB,EAAyBC,GAAzB,QAAoC,iBAApC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,SAAT,QAA0B,OAA1B;;AAEA,SAASC,UAAT,GAAsB;AAAA;;AAElB,QAAMC,QAAQ,GAAGH,WAAW,EAA5B;AAEA,QAAMI,KAAK,GAAGL,WAAW,CAAEM,KAAD,IAAWA,KAAK,CAACD,KAAlB,CAAzB;AACA,QAAME,MAAM,GAAGP,WAAW,CAAEM,KAAD,IAAWA,KAAK,CAACC,MAAlB,CAA1B;AAEA,QAAMC,SAAS,GAAGR,WAAW,CAAEM,KAAD,IAAWA,KAAK,CAACE,SAAlB,CAA7B;AACA,QAAMC,UAAU,GAAGT,WAAW,CAAEM,KAAD,IAAWA,KAAK,CAACG,UAAlB,CAA9B;AAEA,QAAMC,QAAQ,GAAGV,WAAW,CAAEM,KAAD,IAAWA,KAAK,CAACI,QAAlB,CAA5B;AACA,QAAMC,SAAS,GAAGX,WAAW,CAAEM,KAAD,IAAWA,KAAK,CAACK,SAAlB,CAA7B;AACA,QAAMC,QAAQ,GAAGZ,WAAW,CAAEM,KAAD,IAAWA,KAAK,CAACM,QAAlB,CAA5B;AAEA,QAAMC,YAAY,GAAGb,WAAW,CAAEM,KAAD,IAAWA,KAAK,CAACO,YAAlB,CAAhC;AACA,QAAMC,aAAa,GAAGd,WAAW,CAAEM,KAAD,IAAWA,KAAK,CAACQ,aAAlB,CAAjC;AAEA,QAAMC,WAAW,GAAGf,WAAW,CAAEM,KAAD,IAAWA,KAAK,CAACS,WAAlB,CAA/B;AAEA,QAAMC,IAAI,GAAGhB,WAAW,CAAEM,KAAD,IAAWA,KAAK,CAACU,IAAlB,CAAxB;AACA,QAAMC,SAAS,GAAGjB,WAAW,CAAEM,KAAD,IAAWA,KAAK,CAACW,SAAlB,CAA7B;AAEA,QAAMC,SAAS,GAAGlB,WAAW,CAAEM,KAAD,IAAWA,KAAK,CAACa,IAAlB,CAA7B;;AACA,QAAMC,IAAI,GAAG,MAAM;AACfhB,IAAAA,QAAQ,CAAC;AAAEiB,MAAAA,IAAI,EAAE;AAAR,KAAD,CAAR;AACH,GAFD;;AAIA,QAAMC,UAAU,GAAG,MAAM;AACrBC,IAAAA,KAAK,CAAC,6BAAD,EAAgC;AACjCC,MAAAA,MAAM,EAAE,MADyB;AAEjCC,MAAAA,OAAO,EAAE;AACL,wBAAgB,kBADX;AAEL,kBAAU,kBAFL;AAGL,yBAAkB,UAASC,MAAM,CAACC,YAAP,CAAoBC,KAAM;AAHhD,OAFwB;AAOjCC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBC,QAAAA,QAAQ,EAAGnB,YAAY,GAAGC,aAAf,GAA+B,IAA/B,GAAsC;AADhC,OAAf;AAP2B,KAAhC,CAAL,CAWKmB,IAXL,CAWUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAXjB,EAYKF,IAZL,CAYWG,QAAD,IAAc;AAChBhC,MAAAA,QAAQ,CAAC;AACLiB,QAAAA,IAAI,EAAE,WADD;AAELN,QAAAA,WAAW,EAAEqB,QAAQ,CAACC,OAAT,CAAiBL,QAFzB;AAGL3B,QAAAA,KAAK,EAAE+B,QAAQ,CAAC/B;AAHX,OAAD,CAAR;AAKH,KAlBL;AAmBH,GApBD,CA3BkB,CAiDlB;;;AACAH,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIW,YAAY,KAAK,CAAjB,IAAsBC,aAAa,KAAK,CAA5C,EAA+C;AAC3CQ,MAAAA,UAAU;AACb;AACJ,GAJQ,EAIN,CAACT,YAAD,EAAeC,aAAf,CAJM,CAAT,CAlDkB,CAwDlB;AACA;;AACAZ,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIQ,QAAQ,IAAIC,SAAhB,EAA2B;AACvBP,MAAAA,QAAQ,CAAC;AAAEiB,QAAAA,IAAI,EAAE;AAAR,OAAD,CAAR;AACAjB,MAAAA,QAAQ,CAAC;AAAEiB,QAAAA,IAAI,EAAE;AAAR,OAAD,CAAR;AACH;AACJ,GALQ,EAKN,CAACX,QAAD,EAAWC,SAAX,CALM,CAAT,CA1DkB,CAiElB;;AACAT,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIU,QAAQ,KAAK,KAAjB,EAAwB;AACpB,UAAI0B,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAiBxB,SAAS,CAACyB,MAA3B,GAAqC,CAAhD,CAAd;;AACA,aAAOJ,OAAO,GAAG,CAAjB,EAAoB;AAChBlC,QAAAA,QAAQ,CAAC;AAACiB,UAAAA,IAAI,EAAC;AAAN,SAAD,CAAR;AACAiB,QAAAA,OAAO,IAAI,CAAX;AACH;;AACDK,MAAAA,UAAU,CAAC,MAAMvC,QAAQ,CAAC;AAAEiB,QAAAA,IAAI,EAAE;AAAR,OAAD,CAAf,EAAyC,IAAzC,CAAV;AACH;AACJ,GATQ,EASN,CAACT,QAAD,CATM,CAAT;AAWA,sBACI;AAAA,4BACI;AAAA,iCAAiBJ,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,kCAAkBC,UAAlB;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII;AAAA,yCAAyBO,IAAI,CAAC0B,MAA9B;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ,eAKI;AAAA,0CAA0BzB,SAAS,CAACyB,MAApC;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ,eAMI;AAAA;AAAA;AAAA;AAAA,YANJ,eAOI;AAAA,yCAAyB7B,YAAzB;AAAA;AAAA;AAAA;AAAA;AAAA,YAPJ,eAQI;AAAA,0CAA0BC,aAA1B;AAAA;AAAA;AAAA;AAAA;AAAA,YARJ,eASI;AAAA;AAAA;AAAA;AAAA,YATJ,eAUI,QAAC,SAAD;AAAA,6BACI,QAAC,GAAD;AAAA,+BACI,QAAC,GAAD;AAAA,iCACI,QAAC,GAAD;AAAK,YAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAVJ,eAiBI;AAAA,2BAAWF,QAAQ,GAAG,MAAH,GAAY,OAA/B;AAAA;AAAA;AAAA;AAAA;AAAA,YAjBJ,eAkBI;AAAA,kCAAkBF,QAAQ,GAAG,KAAH,GAAW,IAArC;AAAA;AAAA;AAAA;AAAA;AAAA,YAlBJ,eAmBI;AAAA,mCAAmBC,SAAS,GAAG,KAAH,GAAW,IAAvC;AAAA;AAAA;AAAA;AAAA;AAAA,YAnBJ,eAoBI;AAAQ,MAAA,OAAO,EAAES,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YApBJ,eAqBI;AAAA,mCAAmBf,KAAK,CAACqC,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA,YArBJ,eAsBI;AAAA,kCAAkB3B,WAAW,IAAIA,WAAW,KAAK,IAA/B,GAAsC,MAAtC,GAA+C,OAAjE;AAAA;AAAA;AAAA;AAAA;AAAA,YAtBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA0BH;;GAvGQZ,U;UAEYF,W,EAEHD,W,EACCA,W,EAEGA,W,EACCA,W,EAEFA,W,EACCA,W,EACDA,W,EAEIA,W,EACCA,W,EAEFA,W,EAEPA,W,EACKA,W,EAEAA,W;;;KAtBbG,U;AAyGT,eAAeA,UAAf","sourcesContent":["import { Container, Row, Col } from 'react-bootstrap'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { useEffect } from 'react'\n\nfunction PlayerInfo() {\n\n    const dispatch = useDispatch()\n\n    const games = useSelector((state) => state.games)\n    const gameOn = useSelector((state) => state.gameOn)\n\n    const userScore = useSelector((state) => state.userScore)\n    const enemyScore = useSelector((state) => state.enemyScore)\n\n    const userPass = useSelector((state) => state.userPass)\n    const enemyPass = useSelector((state) => state.enemyPass)\n    const userTurn = useSelector((state) => state.userTurn)\n\n    const userReactors = useSelector((state) => state.userReactors)\n    const enemyReactors = useSelector((state) => state.enemyReactors)\n\n    const userVictory = useSelector((state) => state.userVictory)\n\n    const hand = useSelector((state) => state.hand)\n    const enemyHand = useSelector((state) => state.enemyHand)\n\n    const userField = useSelector((state) => state.user)\n    const pass = () => {\n        dispatch({ type: 'USER_PASS' })\n    }\n\n    const createGame = () => {\n        fetch('http://localhost:3000/games', {\n            method: 'POST',\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Accept\": \"application/json\",\n                \"Authorization\": `Bearer ${window.localStorage.token}`\n            },\n            body: JSON.stringify({\n                game_won: (userReactors > enemyReactors ? true : false)\n            })\n        })\n            .then(res => res.json())\n            .then((userInfo) => {\n                dispatch({\n                    type: 'GAME_OVER',\n                    userVictory: userInfo.newGame.game_won,\n                    games: userInfo.games\n                })\n            })\n    }\n\n    //if one side's reactors are down, end the game \n    useEffect(() => {\n        if (userReactors === 0 || enemyReactors === 0) {\n            createGame()\n        }\n    }, [userReactors, enemyReactors])\n\n    //Checks to see if both have passed \n    //End game actually triggered by ROUND_OVER updating reactors \n    useEffect(() => {\n        if (userPass && enemyPass) {\n            dispatch({ type: 'ROUND_OVER' })\n            dispatch({ type: 'RESET_BOARD' })\n        }\n    }, [userPass, enemyPass])\n\n    //Runs enemy turn if user passes\n    useEffect(() => {\n        if (userTurn === false) {\n            let counter = Math.floor(Math.random() * (enemyHand.length) + 1)\n            while (counter > 0) {\n                dispatch({type:'ENEMY_PLAY'})\n                counter -= 1\n            }\n            setTimeout(() => dispatch({ type: 'ENEMY_PASS' }), 4000)\n        }\n    }, [userTurn])\n\n    return (\n        <div>\n            <h1>User Score: {userScore}</h1>\n            <h1>Enemy Score: {enemyScore}</h1>\n            <br></br>\n            <h1>User cards in hand: {hand.length}</h1>\n            <h1>Enemy cards in hand: {enemyHand.length}</h1>\n            <br></br>\n            <h1>User Reactors Left: {userReactors}</h1>\n            <h1>Enemy Reactors Left: {enemyReactors}</h1>\n            <br></br>\n            <Container>\n                <Row>\n                    <Col>\n                        <Row className=\"card-tray\"> </Row>\n                    </Col>\n                </Row>\n            </Container>\n            <h1>Turn: {userTurn ? 'User' : 'Enemy'}</h1>\n            <h1>User Passed: {userPass ? 'Yes' : 'No'}</h1>\n            <h1>Enemy Passed: {enemyPass ? 'Yes' : 'No'}</h1>\n            <button onClick={pass}>Pass</button>\n            <h1>Games Played: {games.length}</h1>\n            <h1>GAME WINNER: {userVictory && userVictory !== null ? 'User' : 'Enemy'}</h1>\n        </div>\n    )\n}\n\nexport default PlayerInfo;"]},"metadata":{},"sourceType":"module"}