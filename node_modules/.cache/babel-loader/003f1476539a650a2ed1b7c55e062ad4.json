{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/ben/flatiron/work/mod5/moon-gwent/frontend/src/components/VictoryModal.js\",\n    _s = $RefreshSig$();\n\nimport { Modal, Button, Container, Row, Col } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\n\nfunction VictoryModal(props) {\n  _s();\n\n  const dispatch = useDispatch();\n  const userReactors = useSelector(state => state.userReactors);\n  const enemyReactors = useSelector(state => state.enemyReactors);\n\n  const createGame = () => {\n    fetch('http://localhost:3000/games', {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\",\n        \"Authorization\": `Bearer ${window.localStorage.token}`\n      },\n      body: JSON.stringify({\n        game_won: userReactors > enemyReactors ? true : false\n      })\n    }).then(res => res.json()).then(userInfo => {\n      dispatch({\n        type: 'GAME_OVER',\n        userVictory: userInfo.newGame.game_won,\n        games: userInfo.games\n      });\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Modal, { ...props,\n    size: \"lg\",\n    \"aria-labelledby\": \"contained-modal-title-vcenter\",\n    centered: true,\n    className: \"game-over-modal\",\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      className: \"game-loss-modal\",\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            style: {\n              color: 'red',\n              textAlign: 'center'\n            },\n            children: \"Victory!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 26\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          style: {\n            fontSize: '35px',\n            textAlign: 'center'\n          },\n          children: \"You've beaten the AI and liberated this colony!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"success\",\n          onClick: createGame,\n          className: \"game-over-button\",\n          children: \"Return to Base\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n}\n\n_s(VictoryModal, \"J2CduNZZKdCOmgJ2elaC/SIGov8=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = VictoryModal;\nexport default VictoryModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"VictoryModal\");","map":{"version":3,"sources":["/Users/ben/flatiron/work/mod5/moon-gwent/frontend/src/components/VictoryModal.js"],"names":["Modal","Button","Container","Row","Col","useDispatch","useSelector","VictoryModal","props","dispatch","userReactors","state","enemyReactors","createGame","fetch","method","headers","window","localStorage","token","body","JSON","stringify","game_won","then","res","json","userInfo","type","userVictory","newGame","games","color","textAlign","fontSize"],"mappings":";;;;;AAAA,SAASA,KAAT,EAAgBC,MAAhB,EAAwBC,SAAxB,EAAmCC,GAAnC,EAAwCC,GAAxC,QAAmD,iBAAnD;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;;AAEA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAAA;;AACzB,QAAMC,QAAQ,GAAGJ,WAAW,EAA5B;AACA,QAAMK,YAAY,GAAGJ,WAAW,CAAEK,KAAD,IAAWA,KAAK,CAACD,YAAlB,CAAhC;AACA,QAAME,aAAa,GAAGN,WAAW,CAAEK,KAAD,IAAWA,KAAK,CAACC,aAAlB,CAAjC;;AAEA,QAAMC,UAAU,GAAG,MAAM;AACrBC,IAAAA,KAAK,CAAC,6BAAD,EAAgC;AACjCC,MAAAA,MAAM,EAAE,MADyB;AAEjCC,MAAAA,OAAO,EAAE;AACL,wBAAgB,kBADX;AAEL,kBAAU,kBAFL;AAGL,yBAAkB,UAASC,MAAM,CAACC,YAAP,CAAoBC,KAAM;AAHhD,OAFwB;AAOjCC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBC,QAAAA,QAAQ,EAAGb,YAAY,GAAGE,aAAf,GAA+B,IAA/B,GAAsC;AADhC,OAAf;AAP2B,KAAhC,CAAL,CAWKY,IAXL,CAWUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAXjB,EAYKF,IAZL,CAYWG,QAAD,IAAc;AAChBlB,MAAAA,QAAQ,CAAC;AACLmB,QAAAA,IAAI,EAAE,WADD;AAELC,QAAAA,WAAW,EAAEF,QAAQ,CAACG,OAAT,CAAiBP,QAFzB;AAGLQ,QAAAA,KAAK,EAAEJ,QAAQ,CAACI;AAHX,OAAD,CAAR;AAKH,KAlBL;AAmBH,GApBD;;AAsBA,sBACI,QAAC,KAAD,OACQvB,KADR;AAEI,IAAA,IAAI,EAAC,IAFT;AAGI,uBAAgB,+BAHpB;AAII,IAAA,QAAQ,MAJZ;AAKI,IAAA,SAAS,EAAC,iBALd;AAAA,2BAOI,QAAC,SAAD;AAAW,MAAA,SAAS,EAAC,iBAArB;AAAA,8BACI,QAAC,GAAD;AAAA,+BACI,QAAC,GAAD;AAAA,iCAAK;AAAI,YAAA,KAAK,EAAE;AAAEwB,cAAAA,KAAK,EAAE,KAAT;AAAgBC,cAAAA,SAAS,EAAE;AAA3B,aAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAII,QAAC,GAAD;AAAA,+BACI,QAAC,GAAD;AAAK,UAAA,KAAK,EAAE;AAAEC,YAAAA,QAAQ,EAAE,MAAZ;AAAoBD,YAAAA,SAAS,EAAE;AAA/B,WAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAJJ,eAOI,QAAC,KAAD,CAAO,MAAP;AAAA,+BACI,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAC,SAAhB;AAA0B,UAAA,OAAO,EAAEpB,UAAnC;AAA+C,UAAA,SAAS,EAAC,kBAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAPJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAqBH;;GAhDQN,Y;UACYF,W,EACIC,W,EACCA,W;;;KAHjBC,Y;AAkDT,eAAeA,YAAf","sourcesContent":["import { Modal, Button, Container, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\n\nfunction VictoryModal(props) {\n    const dispatch = useDispatch();\n    const userReactors = useSelector((state) => state.userReactors)\n    const enemyReactors = useSelector((state) => state.enemyReactors)\n\n    const createGame = () => {\n        fetch('http://localhost:3000/games', {\n            method: 'POST',\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Accept\": \"application/json\",\n                \"Authorization\": `Bearer ${window.localStorage.token}`\n            },\n            body: JSON.stringify({\n                game_won: (userReactors > enemyReactors ? true : false)\n            })\n        })\n            .then(res => res.json())\n            .then((userInfo) => {\n                dispatch({\n                    type: 'GAME_OVER',\n                    userVictory: userInfo.newGame.game_won,\n                    games: userInfo.games\n                })\n            })\n    }\n\n    return (\n        <Modal\n            {...props}\n            size=\"lg\"\n            aria-labelledby=\"contained-modal-title-vcenter\"\n            centered\n            className='game-over-modal'\n        >\n            <Container className='game-loss-modal'>\n                <Row>\n                    <Col><h1 style={{ color: 'red', textAlign: 'center' }}>Victory!</h1></Col>\n                </Row>\n                <Row>\n                    <Col style={{ fontSize: '35px', textAlign: 'center' }}>You've beaten the AI and liberated this colony!</Col>\n                </Row>\n                <Modal.Footer >\n                    <Button variant='success' onClick={createGame} className='game-over-button'>Return to Base</Button>\n                </Modal.Footer>\n            </Container>\n        </Modal>\n    );\n}\n\nexport default VictoryModal"]},"metadata":{},"sourceType":"module"}