{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/ben/flatiron/work/mod5/moon-gwent/frontend/src/components/UnitCard.js\",\n    _s = $RefreshSig$();\n\nimport { Card } from 'react-bootstrap';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useEffect, useState } from 'react';\nimport gun from '../resources/laser-gun.png';\nimport wheel from '../resources/car.png';\nimport ship from '../resources/battleship.png';\nimport develop from '../resources/sketch.png';\nimport rocky from '../resources/mountain.png';\nimport cold from '../resources/snowflakes.png';\nimport flare from '../resources/electricity.png';\n\nconst UnitCard = ({\n  card,\n  hand,\n  userField,\n  enemyField\n}) => {\n  _s();\n\n  const dispatch = useDispatch();\n  const env = useSelector(state => state.env);\n  const userTurn = useSelector(state => state.userTurn);\n  const oldStrength = useState(card.strength);\n  const [conditions, setConditions] = useState([]);\n  let logo;\n\n  if (card.role == 'foot' || card.role == 'other') {\n    logo = gun;\n  } else if (card.role == 'ground') {\n    logo = wheel;\n  } else if (card.role == 'space') {\n    logo = ship;\n  } else if (card.ability == 'develop') {\n    logo = develop;\n  } else if (card.ability == 'rocky') {\n    logo = rocky;\n  } else if (card.ability == 'cold') {\n    logo = cold;\n  } else if (card.ability == 'flare') {\n    logo = flare;\n  }\n\n  const playCard = () => {\n    let role = card.role;\n\n    if (role == 'env') {\n      //if it's an env card, put it in the shared env row\n      dispatch({\n        type: \"PLAY_ENV\",\n        card: card\n      });\n      dispatch({\n        type: \"END_TURN\"\n      });\n    } else {\n      //puts the card in the correct array inside field \n      dispatch({\n        type: \"PLAY_CARD\",\n        role: role,\n        card: card\n      });\n      dispatch({\n        type: 'END_TURN'\n      });\n    }\n  };\n\n  useEffect(() => {\n    //Cards look at env. When it changes, they run the corresponding action \n    //if they're in the field and not an env card, their strength is reduced accordingly\n    if ((userField === true || userField === false) && !card.is_special) {\n      setConditions = env.map(card => card.ability);\n\n      if (conditions.includes('develop')) {\n        dispatch({\n          type: 'DEVELOP',\n          card: card,\n          oldStrength: oldStrength[0],\n          userField: userField ? true : false\n        });\n      } else if (card.role === 'foot' && conditions.includes('cold')) {\n        dispatch({\n          type: \"COLD\",\n          card: card\n        });\n      } else if (card.role === 'ground' && conditions.includes('rocky')) {\n        dispatch({\n          type: 'ROCKY',\n          card: card\n        });\n      } else if (card.role === 'space' && conditions.includes('flare')) {\n        dispatch({\n          type: 'FLARE',\n          card: card\n        });\n      }\n    }\n\n    if (hand && !(card.role === 'env')) {\n      let conditions = env.map(card => card.ability);\n\n      if (conditions.includes('develop')) {\n        dispatch({\n          type: 'DEVELOP',\n          card: card,\n          oldStrength: oldStrength[0],\n          userField: userField ? true : false\n        });\n      }\n    }\n  }, [env]);\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"card-unit\",\n    border: \"secondary\",\n    bg: 'dark',\n    onClick: hand && userTurn ? () => playCard() : null,\n    children: [card.role == 'env' ? null : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"strength\",\n      style: {\n        color: conditions.includes('flare') ? 'red' : 'green'\n      },\n      children: hand ? oldStrength : card.strength\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-content\",\n      children: /*#__PURE__*/_jsxDEV(Card.Img, {\n        src: logo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 9\n  }, this);\n};\n\n_s(UnitCard, \"ps4p8j3u0vj08JvWtTwxT+RiaxE=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = UnitCard;\nexport default UnitCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"UnitCard\");","map":{"version":3,"sources":["/Users/ben/flatiron/work/mod5/moon-gwent/frontend/src/components/UnitCard.js"],"names":["Card","useSelector","useDispatch","useEffect","useState","gun","wheel","ship","develop","rocky","cold","flare","UnitCard","card","hand","userField","enemyField","dispatch","env","state","userTurn","oldStrength","strength","conditions","setConditions","logo","role","ability","playCard","type","is_special","map","includes","color"],"mappings":"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","sourcesContent":["import { Card } from 'react-bootstrap'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { useEffect, useState } from 'react'\nimport gun from '../resources/laser-gun.png'\nimport wheel from '../resources/car.png'\nimport ship from '../resources/battleship.png'\nimport develop from '../resources/sketch.png'\nimport rocky from '../resources/mountain.png'\nimport cold from '../resources/snowflakes.png'\nimport flare from '../resources/electricity.png'\n\nconst UnitCard = ({ card, hand, userField, enemyField }) => {\n\n    const dispatch = useDispatch()\n    const env = useSelector((state) => state.env)\n    const userTurn = useSelector((state) => state.userTurn)\n    const oldStrength = useState(card.strength)\n    const [conditions,setConditions] = useState([])\n\n    let logo\n    if (card.role == 'foot' || card.role == 'other') {\n        logo = gun\n    }\n    else if (card.role == 'ground') {\n        logo = wheel\n    }\n    else if (card.role == 'space') {\n        logo = ship\n    }\n    else if (card.ability == 'develop') {\n        logo = develop\n    }\n    else if (card.ability == 'rocky') {\n        logo = rocky\n    }\n    else if (card.ability == 'cold') {\n        logo = cold\n    }\n    else if (card.ability == 'flare') {\n        logo = flare\n    }\n\n    const playCard = () => {\n        let role = card.role\n        if (role == 'env') {\n            //if it's an env card, put it in the shared env row\n            dispatch({ type: \"PLAY_ENV\", card: card })\n            dispatch({ type: \"END_TURN\" })\n        }\n        else {\n            //puts the card in the correct array inside field \n            dispatch({ type: \"PLAY_CARD\", role: role, card: card })\n            dispatch({ type: 'END_TURN' })\n        }\n    }\n\n\n    useEffect(() => {\n        //Cards look at env. When it changes, they run the corresponding action \n        //if they're in the field and not an env card, their strength is reduced accordingly\n        if ((userField === true || userField === false) && !(card.is_special)) {\n            setConditions = env.map(card => card.ability)\n            if (conditions.includes('develop')) {\n                dispatch({ type: 'DEVELOP', card: card, oldStrength: oldStrength[0], userField: userField ? true : false })\n            }\n            else if ((card.role === 'foot') && (conditions.includes('cold'))) {\n                dispatch({ type: \"COLD\", card: card })\n            }\n            else if ((card.role === 'ground') && (conditions.includes('rocky'))) {\n                dispatch({ type: 'ROCKY', card: card })\n            }\n            else if ((card.role === 'space') && (conditions.includes('flare'))) {\n                dispatch({ type: 'FLARE', card: card })\n            }\n        }\n        if (hand && !(card.role === 'env')) {\n            let conditions = env.map(card => card.ability)\n            if (conditions.includes('develop')) {\n                dispatch({ type: 'DEVELOP', card: card, oldStrength: oldStrength[0], userField: userField ? true : false })\n            }\n        }\n    }, [env])\n\n\n    return (\n        <Card\n            className='card-unit'\n            border='secondary'\n            bg={'dark'}\n            onClick={hand && userTurn ? () => playCard() : null}\n        >\n            {card.role == 'env' ?\n                null :\n                <div className=\"strength\"\n                    style={{ color: conditions.includes('flare') ? 'red' : 'green' }}>\n                    {hand ? oldStrength : card.strength}\n                </div>\n            }\n            <div className='card-content'>\n                <Card.Img src={logo} />\n            </div>\n\n        </Card>\n    )\n}\n\nexport default UnitCard;"]},"metadata":{},"sourceType":"module"}