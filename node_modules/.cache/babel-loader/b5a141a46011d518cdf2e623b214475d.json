{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/ben/flatiron/work/mod5/moon-gwent/frontend/src/containers/GameBoard.js\",\n    _s = $RefreshSig$();\n\nimport { Container, Row, Col } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect, useState } from 'react';\nimport history from '../history';\nimport Battlefield from './Battlefield';\nimport PlayerInfo from './PlayerInfo';\nimport DeckInfo from './DeckInfo';\nimport VictoryModal from '../components/VictoryModal';\nimport LossModal from '../components/LossModal';\n\nfunction GameBoard() {\n  _s();\n\n  const userReactors = useSelector(state => state.userReactors);\n  const enemyReactors = useSelector(state => state.enemyReactors);\n  const [victoryModalShow, setVictoryModalShow] = useState(false);\n  const [lossModalShow, setLossModalShow] = useState(false);\n  const [passModal, setPassModalShow] = useState(false); //if one side's reactors are down, end the game \n\n  useEffect(() => {\n    if (enemyReactors === 0) {\n      setVictoryModalShow(true);\n    } else if (userReactors === 0) {\n      setLossModalShow(true);\n    }\n  }, [userReactors, enemyReactors]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    fluid: true,\n    className: \"gameboard\",\n    children: [/*#__PURE__*/_jsxDEV(VictoryModal, {\n      show: victoryModalShow\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(LossModal, {\n      show: lossModalShow\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: lossModalShow\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        xs: 3,\n        children: /*#__PURE__*/_jsxDEV(PlayerInfo, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        xs: 7,\n        className: \"battlefield\",\n        children: /*#__PURE__*/_jsxDEV(Battlefield, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        xs: 2,\n        children: /*#__PURE__*/_jsxDEV(DeckInfo, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n}\n\n_s(GameBoard, \"ylnaKyghd69imjkSKqehdIa9jP4=\", false, function () {\n  return [useSelector, useSelector];\n});\n\n_c = GameBoard;\nexport default GameBoard;\n\nvar _c;\n\n$RefreshReg$(_c, \"GameBoard\");","map":{"version":3,"sources":["/Users/ben/flatiron/work/mod5/moon-gwent/frontend/src/containers/GameBoard.js"],"names":["Container","Row","Col","useDispatch","useSelector","useEffect","useState","history","Battlefield","PlayerInfo","DeckInfo","VictoryModal","LossModal","GameBoard","userReactors","state","enemyReactors","victoryModalShow","setVictoryModalShow","lossModalShow","setLossModalShow","passModal","setPassModalShow"],"mappings":";;;;;AAAA,SAASA,SAAT,EAAoBC,GAApB,EAAyBC,GAAzB,QAAoC,iBAApC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,OAAP,MAAoB,YAApB;AAEA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;;AAEA,SAASC,SAAT,GAAqB;AAAA;;AAEjB,QAAMC,YAAY,GAAGV,WAAW,CAAEW,KAAD,IAAWA,KAAK,CAACD,YAAlB,CAAhC;AACA,QAAME,aAAa,GAAGZ,WAAW,CAAEW,KAAD,IAAWA,KAAK,CAACC,aAAlB,CAAjC;AACA,QAAM,CAACC,gBAAD,EAAmBC,mBAAnB,IAA0CZ,QAAQ,CAAC,KAAD,CAAxD;AACA,QAAM,CAACa,aAAD,EAAgBC,gBAAhB,IAAoCd,QAAQ,CAAC,KAAD,CAAlD;AACA,QAAM,CAACe,SAAD,EAAYC,gBAAZ,IAAgChB,QAAQ,CAAC,KAAD,CAA9C,CANiB,CAQjB;;AACAD,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIW,aAAa,KAAK,CAAtB,EAAyB;AACrBE,MAAAA,mBAAmB,CAAC,IAAD,CAAnB;AACH,KAFD,MAGK,IAAIJ,YAAY,KAAK,CAArB,EAAuB;AACxBM,MAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACH;AACJ,GAPQ,EAON,CAACN,YAAD,EAAeE,aAAf,CAPM,CAAT;AASA,sBACI,QAAC,SAAD;AAAW,IAAA,KAAK,MAAhB;AAAiB,IAAA,SAAS,EAAC,WAA3B;AAAA,4BACI,QAAC,YAAD;AACA,MAAA,IAAI,EAAEC;AADN;AAAA;AAAA;AAAA;AAAA,YADJ,eAII,QAAC,SAAD;AACA,MAAA,IAAI,EAAEE;AADN;AAAA;AAAA;AAAA;AAAA,YAJJ,eAMI,QAAC,KAAD;AACA,MAAA,IAAI,EAAEA;AADN;AAAA;AAAA;AAAA;AAAA,YANJ,eAQI,QAAC,GAAD;AAAA,8BACI,QAAC,GAAD;AAAK,QAAA,EAAE,EAAE,CAAT;AAAA,+BACI,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAII,QAAC,GAAD;AAAK,QAAA,EAAE,EAAE,CAAT;AAAY,QAAA,SAAS,EAAC,aAAtB;AAAA,+BACI,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAJJ,eAOI,QAAC,GAAD;AAAK,QAAA,EAAE,EAAE,CAAT;AAAA,+BACI,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,YARJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAsBH;;GAxCQN,S;UAEgBT,W,EACCA,W;;;KAHjBS,S;AA0CT,eAAeA,SAAf","sourcesContent":["import { Container, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useEffect, useState } from 'react'\nimport history from '../history'\n\nimport Battlefield from './Battlefield'\nimport PlayerInfo from './PlayerInfo'\nimport DeckInfo from './DeckInfo'\nimport VictoryModal from '../components/VictoryModal'\nimport LossModal from '../components/LossModal'\n\nfunction GameBoard() {\n\n    const userReactors = useSelector((state) => state.userReactors)\n    const enemyReactors = useSelector((state) => state.enemyReactors)\n    const [victoryModalShow, setVictoryModalShow] = useState(false)\n    const [lossModalShow, setLossModalShow] = useState(false)\n    const [passModal, setPassModalShow] = useState(false)\n    \n    //if one side's reactors are down, end the game \n    useEffect(() => {\n        if (enemyReactors === 0) {\n            setVictoryModalShow(true)\n        }\n        else if (userReactors === 0){\n            setLossModalShow(true)\n        }\n    }, [userReactors, enemyReactors])\n\n    return (\n        <Container fluid className=\"gameboard\">\n            <VictoryModal\n            show={victoryModalShow}/>\n\n            <LossModal\n            show={lossModalShow}/>\n            <Modal\n            show={lossModalShow}/>\n            <Row>\n                <Col xs={3}>\n                    <PlayerInfo />\n                </Col>\n                <Col xs={7} className=\"battlefield\">\n                    <Battlefield />\n                </Col>\n                <Col xs={2}>\n                    <DeckInfo />\n                </Col>\n            </Row>\n        </Container>\n    )\n}\n\nexport default GameBoard;"]},"metadata":{},"sourceType":"module"}