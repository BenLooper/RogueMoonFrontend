{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/ben/flatiron/work/mod5/moon-gwent/frontend/src/containers/Battlefield.js\",\n    _s = $RefreshSig$();\n\nimport { Container, Row, Col, CardGroup, Card } from 'react-bootstrap';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useEffect, useState } from 'react';\nimport UnitCard from '../components/UnitCard.js';\nimport EnemyCard from '../components/EnemyCard.js';\n\nfunction Battlefield() {\n  _s();\n\n  const dispatch = useDispatch();\n  const gameOn = useSelector(state => state.gameOn);\n  const drawHands = useSelector(state => state.drawHands);\n  const enemyField = useSelector(state => state.enemyField);\n  const userField = useSelector(state => state.userField);\n  const env = useSelector(state => state.env);\n  const [conditions, setConditions] = useState([]);\n  const ownedCards = useSelector(state => state.ownedCards);\n  const hand = useSelector(state => state.hand);\n  const enemyHand = useSelector(state => state.enemyHand);\n\n  const shuffle = array => {\n    let currentIndex = array.length,\n        temporaryValue,\n        randomIndex; // While there remain elements to shuffle...\n\n    while (0 !== currentIndex) {\n      // Pick a remaining element...\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex -= 1; // And swap it with the current element.\n\n      temporaryValue = array[currentIndex];\n      array[currentIndex] = array[randomIndex];\n      array[randomIndex] = temporaryValue;\n    }\n\n    return array;\n  };\n\n  const rowScore = array => {\n    let score = 0;\n\n    for (let i = 0; i < array.length; i++) {\n      score += array[i].strength;\n    }\n\n    return score;\n  }; //On mount, set the game cards and setHands to true \n\n\n  useEffect(() => {\n    let shuffledEnemyGameCards = shuffle(ownedCards);\n    dispatch({\n      type: 'SET_ENEMY_GAME_CARDS',\n      enemyGameCards: shuffledEnemyGameCards\n    });\n    dispatch({\n      type: 'RESET_BOARD'\n    });\n  }, []);\n  useEffect(() => {\n    if (gameOn === true && drawHands === true) {\n      dispatch({\n        type: 'SET_HANDS'\n      });\n    }\n  }, [drawHands]);\n  useEffect(() => {\n    setConditions(env.map(card => card.ability));\n  }, [env]);\n  return (\n    /*#__PURE__*/\n    //These rows populate with played cards\n    //Furthest left is total strength, then active buff, then cards\n    _jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        className: \"card-tray\",\n        children: enemyHand.map(card => /*#__PURE__*/_jsxDEV(EnemyCard, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 40\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          style: {\n            border: 'solid'\n          },\n          className: \"row-score-box\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: conditions.includes('flare') ? 'red' : 'green'\n            },\n            class: \"row-score\",\n            children: rowScore(enemyField.space)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xs: 10,\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            className: \"card-tray\",\n            children: enemyField.space.map(card => /*#__PURE__*/_jsxDEV(UnitCard, {\n              card: card,\n              env: env,\n              userField: false\n            }, card.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 78\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          style: {\n            border: 'solid'\n          },\n          className: \"row-score-box\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: conditions.includes('rocky') ? 'red' : 'green'\n            },\n            class: \"row-score\",\n            children: rowScore(enemyField.ground)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 21\n          }, this), \"                \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xs: 10,\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            className: \"card-tray\",\n            children: enemyField.ground.map(card => /*#__PURE__*/_jsxDEV(UnitCard, {\n              card: card,\n              env: env,\n              userField: false\n            }, card.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 79\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          style: {\n            border: 'solid'\n          },\n          className: \"row-score-box\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: conditions.includes('cold') ? 'red' : 'green'\n            },\n            class: \"row-score\",\n            children: rowScore(enemyField.foot)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 21\n          }, this), \"                \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xs: 10,\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            className: \"card-tray\",\n            children: enemyField.foot.map(card => /*#__PURE__*/_jsxDEV(UnitCard, {\n              card: card,\n              env: env,\n              userField: false\n            }, card.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 77\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          style: {\n            border: 'solid'\n          },\n          className: \"row-score-box\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: conditions.includes('cold') ? 'red' : 'green'\n            },\n            class: \"row-score\",\n            children: rowScore(userField.foot)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xs: 10,\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            className: \"card-tray\",\n            children: userField.foot.map(card => /*#__PURE__*/_jsxDEV(UnitCard, {\n              card: card,\n              env: env,\n              userField: true\n            }, card.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 76\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          style: {\n            border: 'solid'\n          },\n          className: \"row-score-box\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: 'green'\n            },\n            class: \"row-score\",\n            children: rowScore(userField.ground)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xs: 10,\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            className: \"card-tray\",\n            children: userField.ground.map(card => /*#__PURE__*/_jsxDEV(UnitCard, {\n              card: card,\n              env: env,\n              userField: true\n            }, card.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 78\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          style: {\n            border: 'solid'\n          },\n          className: \"row-score-box\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: 'green'\n            },\n            class: \"row-score\",\n            children: rowScore(userField.space)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xs: 10,\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            className: \"card-tray\",\n            children: userField.space.map(card => /*#__PURE__*/_jsxDEV(UnitCard, {\n              card: card,\n              env: env,\n              userField: true\n            }, card.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 77\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        className: \"card-tray\",\n        children: hand.map(card => /*#__PURE__*/_jsxDEV(UnitCard, {\n          card: card,\n          hand: true\n        }, card.id + 1, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 35\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this)\n  );\n}\n\n_s(Battlefield, \"PF/8RW5/Gg3hymyxeExbiwHCNK8=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = Battlefield;\nexport default Battlefield;\n\nvar _c;\n\n$RefreshReg$(_c, \"Battlefield\");","map":{"version":3,"sources":["/Users/ben/flatiron/work/mod5/moon-gwent/frontend/src/containers/Battlefield.js"],"names":["Container","Row","Col","CardGroup","Card","useSelector","useDispatch","useEffect","useState","UnitCard","EnemyCard","Battlefield","dispatch","gameOn","state","drawHands","enemyField","userField","env","conditions","setConditions","ownedCards","hand","enemyHand","shuffle","array","currentIndex","length","temporaryValue","randomIndex","Math","floor","random","rowScore","score","i","strength","shuffledEnemyGameCards","type","enemyGameCards","map","card","ability","border","color","includes","space","id","ground","foot"],"mappings":"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","sourcesContent":["import { Container, Row, Col, CardGroup, Card } from 'react-bootstrap'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { useEffect, useState } from 'react'\nimport UnitCard from '../components/UnitCard.js'\nimport EnemyCard from '../components/EnemyCard.js'\nfunction Battlefield() {\n\n    const dispatch = useDispatch()\n\n    const gameOn = useSelector((state) => state.gameOn)\n    const drawHands = useSelector((state) => state.drawHands)\n\n    const enemyField = useSelector((state) => state.enemyField)\n    const userField = useSelector((state) => state.userField)\n    const env = useSelector((state) => state.env)\n    const [conditions, setConditions] = useState([])\n\n    const ownedCards = useSelector((state) => state.ownedCards)\n\n\n    const hand = useSelector((state) => state.hand)\n    const enemyHand = useSelector((state) => state.enemyHand)\n\n    const shuffle = (array) => {\n        let currentIndex = array.length, temporaryValue, randomIndex;\n\n        // While there remain elements to shuffle...\n        while (0 !== currentIndex) {\n\n            // Pick a remaining element...\n            randomIndex = Math.floor(Math.random() * currentIndex);\n            currentIndex -= 1;\n\n            // And swap it with the current element.\n            temporaryValue = array[currentIndex];\n            array[currentIndex] = array[randomIndex];\n            array[randomIndex] = temporaryValue;\n        }\n\n        return array;\n    }\n\n    const rowScore = (array) => {\n        let score = 0\n        for (let i = 0; i < array.length; i++) {\n            score += array[i].strength\n        }\n        return score\n    }\n\n    //On mount, set the game cards and setHands to true \n    useEffect(() => {\n        let shuffledEnemyGameCards = shuffle(ownedCards)\n        dispatch({ type: 'SET_ENEMY_GAME_CARDS', enemyGameCards: shuffledEnemyGameCards })\n        dispatch({ type: 'RESET_BOARD' })\n    }, [])\n\n    useEffect(() => {\n        if (gameOn === true && drawHands === true) {\n            dispatch({ type: 'SET_HANDS' })\n        }\n    }, [drawHands])\n\n    useEffect(() => {\n        setConditions(env.map(card => card.ability))\n    },[env])\n\n    return (\n        //These rows populate with played cards\n        //Furthest left is total strength, then active buff, then cards\n        <Container >\n            <Row className=\"card-tray\">\n                {enemyHand.map(card => <EnemyCard />)}\n            </Row>\n            <br></br>\n            <Row>\n                <Col style={{ border: 'solid' }} className=\"row-score-box\">\n                    <span style={{ color:conditions.includes('flare')?'red':'green' }} class=\"row-score\">{rowScore(enemyField.space)}</span>\n                </Col>\n                <Col xs={10}>\n                    <Row className=\"card-tray\">{enemyField.space.map(card => <UnitCard card={card} env={env} userField={false} key={card.id} />)}</Row>\n                </Col>\n\n            </Row>\n            <Row>\n                <Col style={{ border: 'solid' }} className=\"row-score-box\">\n                    <span style={{ color:conditions.includes('rocky')?'red':'green' }} class=\"row-score\">{rowScore(enemyField.ground)}</span>                </Col>\n                <Col xs={10}>\n                    <Row className=\"card-tray\">{enemyField.ground.map(card => <UnitCard card={card} env={env} userField={false} key={card.id} />)}</Row>\n                </Col>\n\n            </Row>\n            <Row>\n                <Col style={{ border: 'solid' }} className=\"row-score-box\">\n                    <span style={{ color:conditions.includes('cold')?'red':'green' }} class=\"row-score\">{rowScore(enemyField.foot)}</span>                </Col>\n                <Col xs={10}>\n                    <Row className=\"card-tray\">{enemyField.foot.map(card => <UnitCard card={card} env={env} userField={false} key={card.id} />)}</Row>\n                </Col>\n\n            </Row>\n            <br></br>\n            <Row>\n                <Col style={{ border: 'solid' }} className=\"row-score-box\">\n                    <span style={{ color:conditions.includes('cold')?'red':'green' }} class=\"row-score\">{rowScore(userField.foot)}</span>\n                </Col>\n                <Col xs={10}>\n                    <Row className=\"card-tray\">{userField.foot.map(card => <UnitCard card={card} env={env} userField={true} key={card.id} />)}</Row>\n                </Col>\n\n            </Row>\n            <Row>\n                <Col style={{ border: 'solid' }} className=\"row-score-box\">\n                    <span style={{ color: 'green' }} class=\"row-score\">{rowScore(userField.ground)}</span>\n                </Col>\n                <Col xs={10}>\n                    <Row className=\"card-tray\">{userField.ground.map(card => <UnitCard card={card} env={env} userField={true} key={card.id} />)}</Row>\n                </Col>\n\n            </Row>\n            <Row>\n                <Col style={{ border: 'solid' }} className=\"row-score-box\">\n                    <span style={{ color: 'green' }} class=\"row-score\">{rowScore(userField.space)}</span>\n                </Col>\n                <Col xs={10}>\n                    <Row className=\"card-tray\">{userField.space.map(card => <UnitCard card={card} env={env} userField={true} key={card.id} />)}</Row>\n                </Col>\n\n            </Row>\n            <br></br>\n            {/* This row populates with cards drawn from a users deck.  */}\n            <Row className=\"card-tray\">\n                {hand.map(card => <UnitCard card={card} hand={true} key={card.id + 1} />)}\n            </Row>\n        </Container>\n    )\n}\n\nexport default Battlefield;"]},"metadata":{},"sourceType":"module"}