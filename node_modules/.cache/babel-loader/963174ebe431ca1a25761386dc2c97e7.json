{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/ben/flatiron/work/mod5/moon-gwent/frontend/src/containers/PlayerInfo.js\",\n    _s = $RefreshSig$();\n\nimport { Container, Row, Col, Image } from 'react-bootstrap';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useEffect, useState } from 'react';\nimport UnitCard from '../components/UnitCard.js';\nimport light from '../resources/light.png';\n\nfunction PlayerInfo() {\n  _s();\n\n  const dispatch = useDispatch();\n  const games = useSelector(state => state.games);\n  const gameOn = useSelector(state => state.gameOn);\n  const gameStart = useSelector(state => state.gameStart);\n  const userScore = useSelector(state => state.userScore);\n  const enemyScore = useSelector(state => state.enemyScore);\n  const userPass = useSelector(state => state.userPass);\n  const enemyPass = useSelector(state => state.enemyPass);\n  const userTurn = useSelector(state => state.userTurn);\n  const userReactors = useSelector(state => state.userReactors);\n  const enemyReactors = useSelector(state => state.enemyReactors);\n  const [playerReactors, setPlayerReactors] = useState([]);\n  const [opponentReactors, setOpponentReactors] = useState([[1, 2]]);\n  console.log(opponentReactors);\n  const userVictory = useSelector(state => state.userVictory);\n  const hand = useSelector(state => state.hand);\n  const enemyHand = useSelector(state => state.enemyHand);\n  const userField = useSelector(state => state.userField);\n  const enemyField = useSelector(state => state.enemyField);\n  const env = useSelector(state => state.env);\n\n  const pass = () => {\n    dispatch({\n      type: 'USER_PASS'\n    });\n    dispatch({\n      type: 'END_TURN'\n    });\n  };\n\n  useEffect(() => {\n    setPlayerReactors(playerReactors.length = userReactors);\n    setOpponentReactors(opponentReactors.length = enemyReactors);\n  }, [userReactors, enemyReactors]); //Runs enemy turn after user plays a card / passes \n\n  useEffect(() => {\n    //this prevents him playing before hands are set\n    if (gameStart && enemyHand.length === 0) {\n      setTimeout(() => dispatch({\n        type: 'ENEMY_PASS'\n      }), 2000);\n    } //if it's his turn and he's passed, he ends his turn \n    else if (userTurn === false && enemyPass && !userPass) {\n        dispatch({\n          type: 'END_TURN'\n        });\n      } //if I've passed and it's my turn, it goes back to him\n      else if (userTurn === true && userPass === true && !enemyPass && !userTurn) {\n          setTimeout(() => dispatch({\n            type: 'END_TURN'\n          }), 2000);\n        } else if (userPass && userScore < enemyScore && !enemyPass) {\n          setTimeout(() => dispatch({\n            type: 'ENEMY_PASS'\n          }), 2000);\n        } else if (hand.length > enemyHand.length && userScore > enemyScore + 5 && !enemyPass && !userTurn) {\n          setTimeout(() => dispatch({\n            type: 'ENEMY_PASS'\n          }), 2000);\n        } else if (enemyScore + 10 < userScore && !enemyPass) {\n          setTimeout(() => dispatch({\n            type: 'ENEMY_PASS'\n          }), 2000);\n        } //if I've passed or played and it's his turn (and he hasn't passed), he plays a card\n        else if ((userTurn === false || userPass === true) && !enemyPass && gameOn) {\n            setTimeout(() => dispatch({\n              type: 'ENEMY_PLAY'\n            }), 1000);\n\n            if (enemyHand.length >= 1) {\n              setTimeout(() => dispatch({\n                type: 'END_TURN'\n              }), 2000);\n            }\n          }\n  }, [userTurn, enemyPass]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: [\"Enemy Score: \", enemyScore]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }, this), opponentReactors.forEach(i => /*#__PURE__*/_jsxDEV(Image, {\n            src: light\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 56\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            className: \"card-tray\",\n            children: [env.map(card => /*#__PURE__*/_jsxDEV(UnitCard, {\n              card: card\n            }, card.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 69\n            }, this)), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: [\"User Score: \", userScore]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: [\"User Reactors Left: \", userReactors]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 9\n  }, this);\n}\n\n_s(PlayerInfo, \"ewC/7gxCkLd6l8BjCfWE9oIwBcQ=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = PlayerInfo;\nexport default PlayerInfo;\n\nvar _c;\n\n$RefreshReg$(_c, \"PlayerInfo\");","map":{"version":3,"sources":["/Users/ben/flatiron/work/mod5/moon-gwent/frontend/src/containers/PlayerInfo.js"],"names":["Container","Row","Col","Image","useSelector","useDispatch","useEffect","useState","UnitCard","light","PlayerInfo","dispatch","games","state","gameOn","gameStart","userScore","enemyScore","userPass","enemyPass","userTurn","userReactors","enemyReactors","playerReactors","setPlayerReactors","opponentReactors","setOpponentReactors","console","log","userVictory","hand","enemyHand","userField","enemyField","env","pass","type","length","setTimeout","forEach","i","map","card","id"],"mappings":";;;;;AAAA,SAASA,SAAT,EAAoBC,GAApB,EAAyBC,GAAzB,EAA8BC,KAA9B,QAA2C,iBAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,QAAP,MAAqB,2BAArB;AACA,OAAOC,KAAP,MAAkB,wBAAlB;;AAEA,SAASC,UAAT,GAAsB;AAAA;;AAElB,QAAMC,QAAQ,GAAGN,WAAW,EAA5B;AAEA,QAAMO,KAAK,GAAGR,WAAW,CAAES,KAAD,IAAWA,KAAK,CAACD,KAAlB,CAAzB;AACA,QAAME,MAAM,GAAGV,WAAW,CAAES,KAAD,IAAWA,KAAK,CAACC,MAAlB,CAA1B;AACA,QAAMC,SAAS,GAAGX,WAAW,CAAES,KAAD,IAAWA,KAAK,CAACE,SAAlB,CAA7B;AAEA,QAAMC,SAAS,GAAGZ,WAAW,CAAES,KAAD,IAAWA,KAAK,CAACG,SAAlB,CAA7B;AACA,QAAMC,UAAU,GAAGb,WAAW,CAAES,KAAD,IAAWA,KAAK,CAACI,UAAlB,CAA9B;AAEA,QAAMC,QAAQ,GAAGd,WAAW,CAAES,KAAD,IAAWA,KAAK,CAACK,QAAlB,CAA5B;AACA,QAAMC,SAAS,GAAGf,WAAW,CAAES,KAAD,IAAWA,KAAK,CAACM,SAAlB,CAA7B;AACA,QAAMC,QAAQ,GAAGhB,WAAW,CAAES,KAAD,IAAWA,KAAK,CAACO,QAAlB,CAA5B;AAEA,QAAMC,YAAY,GAAGjB,WAAW,CAAES,KAAD,IAAWA,KAAK,CAACQ,YAAlB,CAAhC;AACA,QAAMC,aAAa,GAAGlB,WAAW,CAAES,KAAD,IAAWA,KAAK,CAACS,aAAlB,CAAjC;AACA,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCjB,QAAQ,CAAC,EAAD,CAApD;AACA,QAAM,CAACkB,gBAAD,EAAmBC,mBAAnB,IAA0CnB,QAAQ,CAAC,CAAC,CAAC,CAAD,EAAG,CAAH,CAAD,CAAD,CAAxD;AACAoB,EAAAA,OAAO,CAACC,GAAR,CAAYH,gBAAZ;AACA,QAAMI,WAAW,GAAGzB,WAAW,CAAES,KAAD,IAAWA,KAAK,CAACgB,WAAlB,CAA/B;AAEA,QAAMC,IAAI,GAAG1B,WAAW,CAAES,KAAD,IAAWA,KAAK,CAACiB,IAAlB,CAAxB;AACA,QAAMC,SAAS,GAAG3B,WAAW,CAAES,KAAD,IAAWA,KAAK,CAACkB,SAAlB,CAA7B;AAEA,QAAMC,SAAS,GAAG5B,WAAW,CAAES,KAAD,IAAWA,KAAK,CAACmB,SAAlB,CAA7B;AACA,QAAMC,UAAU,GAAG7B,WAAW,CAAES,KAAD,IAAWA,KAAK,CAACoB,UAAlB,CAA9B;AACA,QAAMC,GAAG,GAAG9B,WAAW,CAAES,KAAD,IAAWA,KAAK,CAACqB,GAAlB,CAAvB;;AAEA,QAAMC,IAAI,GAAG,MAAM;AACfxB,IAAAA,QAAQ,CAAC;AAAEyB,MAAAA,IAAI,EAAE;AAAR,KAAD,CAAR;AACAzB,IAAAA,QAAQ,CAAC;AAAEyB,MAAAA,IAAI,EAAE;AAAR,KAAD,CAAR;AACH,GAHD;;AAKA9B,EAAAA,SAAS,CAAC,MAAI;AACVkB,IAAAA,iBAAiB,CAACD,cAAc,CAACc,MAAf,GAAwBhB,YAAzB,CAAjB;AACAK,IAAAA,mBAAmB,CAACD,gBAAgB,CAACY,MAAjB,GAA0Bf,aAA3B,CAAnB;AACH,GAHQ,EAGP,CAACD,YAAD,EAAcC,aAAd,CAHO,CAAT,CAlCkB,CAuClB;;AACAhB,EAAAA,SAAS,CAAC,MAAM;AACZ;AACA,QAAIS,SAAS,IAAIgB,SAAS,CAACM,MAAV,KAAqB,CAAtC,EAAyC;AACrCC,MAAAA,UAAU,CAAC,MAAM3B,QAAQ,CAAC;AAAEyB,QAAAA,IAAI,EAAE;AAAR,OAAD,CAAf,EAAyC,IAAzC,CAAV;AACH,KAFD,CAGA;AAHA,SAIK,IAAIhB,QAAQ,KAAK,KAAb,IAAsBD,SAAtB,IAAmC,CAAED,QAAzC,EAAoD;AACrDP,QAAAA,QAAQ,CAAC;AAAEyB,UAAAA,IAAI,EAAE;AAAR,SAAD,CAAR;AACH,OAFI,CAGL;AAHK,WAIA,IAAIhB,QAAQ,KAAK,IAAb,IAAqBF,QAAQ,KAAK,IAAlC,IAA0C,CAAEC,SAA5C,IAA0D,CAAEC,QAAhE,EAA2E;AAC5EkB,UAAAA,UAAU,CAAC,MAAM3B,QAAQ,CAAC;AAAEyB,YAAAA,IAAI,EAAE;AAAR,WAAD,CAAf,EAAuC,IAAvC,CAAV;AACH,SAFI,MAGA,IAAIlB,QAAQ,IAAKF,SAAS,GAAGC,UAAzB,IAAwC,CAAEE,SAA9C,EAA0D;AAC3DmB,UAAAA,UAAU,CAAC,MAAM3B,QAAQ,CAAC;AAAEyB,YAAAA,IAAI,EAAE;AAAR,WAAD,CAAf,EAAyC,IAAzC,CAAV;AACH,SAFI,MAGA,IAAKN,IAAI,CAACO,MAAL,GAAcN,SAAS,CAACM,MAAzB,IAAqCrB,SAAS,GAAIC,UAAU,GAAG,CAA1B,IAAgC,CAAEE,SAAlC,IAAgD,CAAEC,QAA3F,EAAuG;AACxGkB,UAAAA,UAAU,CAAC,MAAM3B,QAAQ,CAAC;AAAEyB,YAAAA,IAAI,EAAE;AAAR,WAAD,CAAf,EAAyC,IAAzC,CAAV;AACH,SAFI,MAGA,IAAKnB,UAAU,GAAG,EAAd,GAAoBD,SAApB,IAAiC,CAAEG,SAAvC,EAAmD;AACpDmB,UAAAA,UAAU,CAAC,MAAM3B,QAAQ,CAAC;AAAEyB,YAAAA,IAAI,EAAE;AAAR,WAAD,CAAf,EAAyC,IAAzC,CAAV;AACH,SAFI,CAGL;AAHK,aAIA,IAAI,CAAChB,QAAQ,KAAK,KAAb,IAAsBF,QAAQ,KAAK,IAApC,KAA6C,CAAEC,SAA/C,IAA6DL,MAAjE,EAAyE;AAC1EwB,YAAAA,UAAU,CAAC,MAAM3B,QAAQ,CAAC;AAAEyB,cAAAA,IAAI,EAAE;AAAR,aAAD,CAAf,EAAyC,IAAzC,CAAV;;AACA,gBAAIL,SAAS,CAACM,MAAV,IAAoB,CAAxB,EAA2B;AAAEC,cAAAA,UAAU,CAAC,MAAM3B,QAAQ,CAAC;AAAEyB,gBAAAA,IAAI,EAAE;AAAR,eAAD,CAAf,EAAuC,IAAvC,CAAV;AAAwD;AACxF;AACJ,GA3BQ,EA2BN,CAAChB,QAAD,EAAWD,SAAX,CA3BM,CAAT;AA6BA,sBACI;AAAA,4BACI,QAAC,SAAD;AAAA,6BACI,QAAC,GAAD;AAAA,+BACI,QAAC,GAAD;AAAA,kCACI;AAAA,wCAAkBF,UAAlB;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAEKQ,gBAAgB,CAACc,OAAjB,CAAyBC,CAAC,iBAAI,QAAC,KAAD;AAAO,YAAA,GAAG,EAAE/B;AAAZ;AAAA;AAAA;AAAA;AAAA,kBAA9B,CAFL;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eASI;AAAA;AAAA;AAAA;AAAA,YATJ,eAUI,QAAC,SAAD;AAAA,6BACI,QAAC,GAAD;AAAA,+BACI,QAAC,GAAD;AAAA,iCACI,QAAC,GAAD;AAAK,YAAA,SAAS,EAAC,WAAf;AAAA,uBAA4ByB,GAAG,CAACO,GAAJ,CAAQC,IAAI,iBAAI,QAAC,QAAD;AAAU,cAAA,IAAI,EAAEA;AAAhB,eAA2BA,IAAI,CAACC,EAAhC;AAAA;AAAA;AAAA;AAAA,oBAAhB,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAVJ,eAiBI;AAAA;AAAA;AAAA;AAAA,YAjBJ,eAkBI,QAAC,SAAD;AAAA,6BACI,QAAC,GAAD;AAAA,+BACI,QAAC,GAAD;AAAA,kCACI;AAAA,uCAAiB3B,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA,+CAAyBK,YAAzB;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAlBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA6BH;;GAlGQX,U;UAEYL,W,EAEHD,W,EACCA,W,EACGA,W,EAEAA,W,EACCA,W,EAEFA,W,EACCA,W,EACDA,W,EAEIA,W,EACCA,W,EAIFA,W,EAEPA,W,EACKA,W,EAEAA,W,EACCA,W,EACPA,W;;;KA3BPM,U;AAoGT,eAAeA,UAAf","sourcesContent":["import { Container, Row, Col, Image } from 'react-bootstrap'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { useEffect, useState } from 'react'\nimport UnitCard from '../components/UnitCard.js'\nimport light from '../resources/light.png'\n\nfunction PlayerInfo() {\n\n    const dispatch = useDispatch()\n\n    const games = useSelector((state) => state.games)\n    const gameOn = useSelector((state) => state.gameOn)\n    const gameStart = useSelector((state) => state.gameStart)\n\n    const userScore = useSelector((state) => state.userScore)\n    const enemyScore = useSelector((state) => state.enemyScore)\n\n    const userPass = useSelector((state) => state.userPass)\n    const enemyPass = useSelector((state) => state.enemyPass)\n    const userTurn = useSelector((state) => state.userTurn)\n\n    const userReactors = useSelector((state) => state.userReactors)\n    const enemyReactors = useSelector((state) => state.enemyReactors)\n    const [playerReactors, setPlayerReactors] = useState([])\n    const [opponentReactors, setOpponentReactors] = useState([[1,2]])\n    console.log(opponentReactors)\n    const userVictory = useSelector((state) => state.userVictory)\n\n    const hand = useSelector((state) => state.hand)\n    const enemyHand = useSelector((state) => state.enemyHand)\n\n    const userField = useSelector((state) => state.userField)\n    const enemyField = useSelector((state) => state.enemyField)\n    const env = useSelector((state) => state.env)\n\n    const pass = () => {\n        dispatch({ type: 'USER_PASS' })\n        dispatch({ type: 'END_TURN' })\n    }\n\n    useEffect(()=>{\n        setPlayerReactors(playerReactors.length = userReactors)\n        setOpponentReactors(opponentReactors.length = enemyReactors)\n    },[userReactors,enemyReactors])\n\n    //Runs enemy turn after user plays a card / passes \n    useEffect(() => {\n        //this prevents him playing before hands are set\n        if (gameStart && enemyHand.length === 0) {\n            setTimeout(() => dispatch({ type: 'ENEMY_PASS' }), 2000)\n        }\n        //if it's his turn and he's passed, he ends his turn \n        else if (userTurn === false && enemyPass && !(userPass)) {\n            dispatch({ type: 'END_TURN' })\n        }\n        //if I've passed and it's my turn, it goes back to him\n        else if (userTurn === true && userPass === true && !(enemyPass) && !(userTurn)) {\n            setTimeout(() => dispatch({ type: 'END_TURN' }), 2000)\n        }\n        else if (userPass && (userScore < enemyScore) && !(enemyPass)) {\n            setTimeout(() => dispatch({ type: 'ENEMY_PASS' }), 2000)\n        }\n        else if ((hand.length > enemyHand.length) && (userScore > (enemyScore + 5) && !(enemyPass) && !(userTurn))) {\n            setTimeout(() => dispatch({ type: 'ENEMY_PASS' }), 2000)\n        }\n        else if ((enemyScore + 10) < userScore && !(enemyPass)) {\n            setTimeout(() => dispatch({ type: 'ENEMY_PASS' }), 2000)\n        }\n        //if I've passed or played and it's his turn (and he hasn't passed), he plays a card\n        else if ((userTurn === false || userPass === true) && !(enemyPass) && gameOn) {\n            setTimeout(() => dispatch({ type: 'ENEMY_PLAY' }), 1000)\n            if (enemyHand.length >= 1) { setTimeout(() => dispatch({ type: 'END_TURN' }), 2000) }\n        }\n    }, [userTurn, enemyPass])\n\n    return (\n        <div>\n            <Container>\n                <Row>\n                    <Col>\n                        <h1>Enemy Score: {enemyScore}</h1>\n                        {opponentReactors.forEach(i => <Image src={light}/>)}\n                    </Col>\n                </Row>\n            </Container>\n            <br></br>\n            <Container>\n                <Row>\n                    <Col>\n                        <Row className=\"card-tray\">{env.map(card => <UnitCard card={card} key={card.id} />)} </Row>\n                    </Col>\n                </Row>\n            </Container>\n            <br></br>\n            <Container>\n                <Row>\n                    <Col>\n                        <h1>User Score: {userScore}</h1>\n                        <h1>User Reactors Left: {userReactors}</h1>\n                    </Col>\n                </Row>\n            </Container>\n        </div>\n    )\n}\n\nexport default PlayerInfo;"]},"metadata":{},"sourceType":"module"}