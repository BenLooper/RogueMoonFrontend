{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/ben/flatiron/work/mod5/moon-gwent/frontend/src/components/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Container, Row, Col, Button, Form } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport history from '../history';\n\nconst Login = () => {\n  _s();\n\n  const [signUp, setSignUp] = useState(false);\n  const dispatch = useDispatch();\n  const usernameInput = useSelector(state => state.usernameInput);\n  const passwordInput = useSelector(state => state.passwordInput);\n\n  const handleUsernameChange = e => {\n    console.log(e.target);\n    dispatch({\n      type: 'CHANGE_USERNAME_INPUT',\n      value: e.target.value\n    });\n  };\n\n  const handlePasswordChange = e => {\n    dispatch({\n      type: 'CHANGE_PASSWORD_INPUT',\n      value: e.target.value\n    });\n  };\n\n  const handleLogin = e => {\n    e.preventDefault();\n    console.log('hey');\n    fetch('http://localhost:3000/auth', {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\"\n      },\n      body: JSON.stringify({\n        username: usernameInput,\n        password: passwordInput\n      })\n    }).then(res => res.json()).then(userInfo => {\n      dispatch({\n        type: 'SET_USER',\n        user: userInfo.user,\n        ownedCards: userInfo.cards,\n        games: userInfo.games\n      });\n      window.localStorage.token = userInfo.jwt;\n      history.push('/');\n    });\n  };\n\n  const handleSignUp = e => {\n    e.preventDefault();\n    console.log('hey');\n    fetch('http://localhost:3000/users', {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\"\n      },\n      body: JSON.stringify({\n        username: usernameInput,\n        password: passwordInput\n      })\n    }).then(res => res.json()).then(message => message.success ? handleLogin() : console.log('error'));\n  };\n\n  return (\n    /*#__PURE__*/\n    // <Container className=\"login-page\" fluid>\n    //     <Row>\n    //         <Col className=\"login-form\">\n    //             <Form onSubmit={() => signUp ? handleSignUp() : handleLogin()}>\n    //                 <Col style={{ paddingLeft: '30px' }}>\n    //                     <h1 style={{ color: 'grey', fontFamily: 'impact' }}>ROGUE MOON</h1>\n    //                 </Col>\n    //                 <Col xs={3}>\n    //                     <Form.Group controlId='userInput'>\n    //                         <Form.Label style={{ color: 'white', fontFamily: 'impact' }}>Username</Form.Label>\n    //                         <Form.Control style={{ color: 'black', fontFamily: 'impact' }} onChange={(e) => handleUsernameChange(e)} placeholder=\"Enter username\" />\n    //                     </Form.Group>\n    //                 </Col>\n    //                 <Col xs={3}>\n    //                     <Form.Group>\n    //                         <Form.Label style={{ color: 'white', fontFamily: 'impact' }}>Password</Form.Label>\n    //                         <Form.Control style={{ color: 'black', fontFamily: 'impact' }} onChange={(e) => handlePasswordChange(e)} type=\"password\" placeholder=\"Password\" />\n    //                     </Form.Group>\n    //                 </Col>\n    //                 <Col xs={3} style={{ paddingLeft: '90px', color: 'black', fontFamily: 'impact' }}>\n    //                     <Button style={{ color: 'black' }} variant=\"success\" type=\"submit\" >\n    //                         {signUp ? 'Sign up' : 'Login'}\n    //                     </Button>\n    //                 </Col>\n    //                 <br></br>\n    //                 <Col xs={3} style={{ paddingLeft: '55px', fontFamily: 'impact' }}>\n    //                     <Button style={{ color: 'black' }} onClick={signUp ? () => setSignUp(false) : () => setSignUp(true)}>\n    //                         {signUp ? 'Existing Users Click' : 'New Users Click'}\n    //                     </Button>\n    //                 </Col>\n    //             </Form>\n    //         </Col>\n    //     </Row>\n    // </Container>\n    _jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"username\",\n        onChange: e => handleUsernameChange(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"password\",\n        onChange: e => handlePasswordChange(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: signUp ? handleSignUp : handleLogin,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: signUp ? () => setSignUp(false) : () => setSignUp(true),\n        children: signUp ? 'Existing User' : 'New User'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }, this)\n  );\n};\n\n_s(Login, \"QmZZ7yPr35PCch6VM+SFkBnpHps=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/ben/flatiron/work/mod5/moon-gwent/frontend/src/components/Login.js"],"names":["React","useState","Container","Row","Col","Button","Form","useDispatch","useSelector","history","Login","signUp","setSignUp","dispatch","usernameInput","state","passwordInput","handleUsernameChange","e","console","log","target","type","value","handlePasswordChange","handleLogin","preventDefault","fetch","method","headers","body","JSON","stringify","username","password","then","res","json","userInfo","user","ownedCards","cards","games","window","localStorage","token","jwt","push","handleSignUp","message","success"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { Container, Row, Col, Button, Form } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport history from '../history'\n\nconst Login = () => {\n\n    const [signUp, setSignUp] = useState(false);\n\n    const dispatch = useDispatch()\n    const usernameInput = useSelector((state) => state.usernameInput)\n    const passwordInput = useSelector((state) => state.passwordInput)\n\n    const handleUsernameChange = (e) => {\n        console.log(e.target)\n        dispatch({ type: 'CHANGE_USERNAME_INPUT', value: e.target.value })\n    }\n\n    const handlePasswordChange = (e) => {\n        dispatch({ type: 'CHANGE_PASSWORD_INPUT', value: e.target.value })\n    }\n\n    const handleLogin = (e) => {\n        e.preventDefault();\n        console.log('hey')\n        fetch('http://localhost:3000/auth', {\n            method: 'POST',\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Accept\": \"application/json\"\n            },\n            body: JSON.stringify({\n                username: usernameInput,\n                password: passwordInput\n            })\n        })\n            .then(res => res.json())\n            .then(userInfo => {\n                dispatch({ type: 'SET_USER', user: userInfo.user, ownedCards: userInfo.cards, games: userInfo.games })\n                window.localStorage.token = userInfo.jwt\n                history.push('/')\n            })\n\n    }\n\n    const handleSignUp = (e) => {\n        e.preventDefault();\n        console.log('hey')\n        fetch('http://localhost:3000/users', {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Accept\": \"application/json\"\n            },\n            body: JSON.stringify({\n                username: usernameInput,\n                password: passwordInput\n            })\n        })\n            .then(res => res.json())\n            .then(message => message.success ? handleLogin() : console.log('error'))\n    }\n\n    return (\n        // <Container className=\"login-page\" fluid>\n        //     <Row>\n        //         <Col className=\"login-form\">\n        //             <Form onSubmit={() => signUp ? handleSignUp() : handleLogin()}>\n        //                 <Col style={{ paddingLeft: '30px' }}>\n        //                     <h1 style={{ color: 'grey', fontFamily: 'impact' }}>ROGUE MOON</h1>\n        //                 </Col>\n        //                 <Col xs={3}>\n        //                     <Form.Group controlId='userInput'>\n        //                         <Form.Label style={{ color: 'white', fontFamily: 'impact' }}>Username</Form.Label>\n        //                         <Form.Control style={{ color: 'black', fontFamily: 'impact' }} onChange={(e) => handleUsernameChange(e)} placeholder=\"Enter username\" />\n        //                     </Form.Group>\n        //                 </Col>\n\n        //                 <Col xs={3}>\n        //                     <Form.Group>\n        //                         <Form.Label style={{ color: 'white', fontFamily: 'impact' }}>Password</Form.Label>\n        //                         <Form.Control style={{ color: 'black', fontFamily: 'impact' }} onChange={(e) => handlePasswordChange(e)} type=\"password\" placeholder=\"Password\" />\n        //                     </Form.Group>\n        //                 </Col>\n        //                 <Col xs={3} style={{ paddingLeft: '90px', color: 'black', fontFamily: 'impact' }}>\n        //                     <Button style={{ color: 'black' }} variant=\"success\" type=\"submit\" >\n        //                         {signUp ? 'Sign up' : 'Login'}\n        //                     </Button>\n        //                 </Col>\n        //                 <br></br>\n        //                 <Col xs={3} style={{ paddingLeft: '55px', fontFamily: 'impact' }}>\n        //                     <Button style={{ color: 'black' }} onClick={signUp ? () => setSignUp(false) : () => setSignUp(true)}>\n        //                         {signUp ? 'Existing Users Click' : 'New Users Click'}\n        //                     </Button>\n        //                 </Col>\n        //             </Form>\n        //         </Col>\n        //     </Row>\n        // </Container>\n        <div>\n            <input type='text' placeholder='username' onChange={(e) => handleUsernameChange(e)} />\n            <br></br>\n            <input type='text' placeholder='password' onChange={(e) => handlePasswordChange(e)} />\n            <button onClick={signUp?handleSignUp:handleLogin}>Submit</button>\n            <br></br>\n            <button onClick={signUp ? () => setSignUp(false) : () => setSignUp(true)}>\n                {signUp ? 'Existing User' : 'New User'}\n            </button>\n        </div>\n    )\n}\n\nexport default Login "]},"metadata":{},"sourceType":"module"}