{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/ben/flatiron/work/mod5/moon-gwent/frontend/src/containers/PlayerInfo.js\",\n    _s = $RefreshSig$();\n\nimport { Container, Row, Col } from 'react-bootstrap';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\n\nfunction PlayerInfo() {\n  _s();\n\n  const dispatch = useDispatch();\n  const games = useSelector(state => state.games);\n  const gameOn = useSelector(state => state.gameOn);\n  const userScore = useSelector(state => state.userScore);\n  const enemyScore = useSelector(state => state.enemyScore);\n  const userPass = useSelector(state => state.userPass);\n  const enemyPass = useSelector(state => state.enemyPass);\n  const userReactors = useSelector(state => state.userReactors);\n  const enemyReactors = useSelector(state => state.enemyReactors);\n  const userVictory = useSelector(state => state.userVictory);\n  const hand = useSelector(state => state.hand);\n\n  const pass = () => {\n    dispatch({\n      type: 'USER_PASS'\n    });\n  };\n\n  useEffect(() => {\n    if ((userReactors === 0 || enemyReactors === 0) && gameOn === true) {\n      dispatch();\n      fetch('http://localhost:3000/games', {\n        method: 'POST',\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Accept\": \"application/json\",\n          \"Authorization\": `Bearer ${window.localStorage.token}`\n        },\n        body: JSON.stringify({\n          game_won: userReactors > enemyReactors ? true : false\n        })\n      }).then(res => res.json()).then(userInfo => dispatch({\n        type: 'GAME_OVER',\n        userVictory: userInfo.newGame.game_won,\n        games: userInfo.games\n      }));\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"User Score: \", userScore]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Enemy Score: \", enemyScore]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"User cards in hand: \", hand.length]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Enemy cards in hand: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"User Reactors Left: \", userReactors]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Enemy Reactors Left: \", enemyReactors]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"User Passed: \", userPass ? 'Yes' : 'No']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Enemy Passed: \", enemyPass ? 'Yes' : 'No']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: pass,\n      children: \"Pass\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Games Won: \", games.length]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"GAME WINNER: \", userVictory && userVictory !== null ? 'User' : 'Enemy']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n}\n\n_s(PlayerInfo, \"hpAtkG/5je0FbSr0SFyF2OHgm3o=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = PlayerInfo;\nexport default PlayerInfo;\n\nvar _c;\n\n$RefreshReg$(_c, \"PlayerInfo\");","map":{"version":3,"sources":["/Users/ben/flatiron/work/mod5/moon-gwent/frontend/src/containers/PlayerInfo.js"],"names":["Container","Row","Col","useSelector","useDispatch","useEffect","PlayerInfo","dispatch","games","state","gameOn","userScore","enemyScore","userPass","enemyPass","userReactors","enemyReactors","userVictory","hand","pass","type","fetch","method","headers","window","localStorage","token","body","JSON","stringify","game_won","then","res","json","userInfo","newGame","length"],"mappings":"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","sourcesContent":["import { Container, Row, Col } from 'react-bootstrap'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { useEffect } from 'react'\n\nfunction PlayerInfo() {\n\n    const dispatch = useDispatch()\n    const games = useSelector((state) => state.games)\n    const gameOn = useSelector((state) => state.gameOn)\n\n    const userScore = useSelector((state) => state.userScore)\n    const enemyScore = useSelector((state) => state.enemyScore)\n\n    const userPass = useSelector((state) => state.userPass)\n    const enemyPass = useSelector((state) => state.enemyPass)\n\n    const userReactors = useSelector((state) => state.userReactors)\n    const enemyReactors = useSelector((state) => state.enemyReactors)\n\n    const userVictory = useSelector((state) => state.userVictory)\n\n    const hand = useSelector((state) => state.hand)\n\n    const pass = () => {\n        dispatch({ type: 'USER_PASS' })\n    }\n\n    useEffect(() => {\n        if ((userReactors === 0 || enemyReactors === 0) && gameOn === true) {\n            dispatch()\n            fetch('http://localhost:3000/games', {\n                method: 'POST',\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    \"Accept\": \"application/json\",\n                    \"Authorization\": `Bearer ${window.localStorage.token}`\n                },\n                body: JSON.stringify({\n                    game_won: (userReactors > enemyReactors ? true : false)\n                })\n            })\n                .then(res => res.json())\n                .then((userInfo) => dispatch({\n                    type: 'GAME_OVER',\n                    userVictory: userInfo.newGame.game_won,\n                    games: userInfo.games\n                }))\n        }\n    })\n\n    return (\n        <div>\n            <h1>User Score: {userScore}</h1>\n            <h1>Enemy Score: {enemyScore}</h1>\n            <br></br>\n            <h1>User cards in hand: {hand.length}</h1>\n            <h1>Enemy cards in hand: </h1>\n            <br></br>\n            <h1>User Reactors Left: {userReactors}</h1>\n            <h1>Enemy Reactors Left: {enemyReactors}</h1>\n            <br></br>\n            <h1>User Passed: {userPass ? 'Yes' : 'No'}</h1>\n            <h1>Enemy Passed: {enemyPass ? 'Yes' : 'No'}</h1>\n            <button onClick={pass}>Pass</button>\n            <h1>Games Won: {games.length}</h1>\n            <h1>GAME WINNER: {userVictory && userVictory !== null ? 'User' : 'Enemy'}</h1>\n        </div>\n    )\n}\n\nexport default PlayerInfo;"]},"metadata":{},"sourceType":"module"}