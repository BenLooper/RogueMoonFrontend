{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/ben/flatiron/work/mod5/moon-gwent/frontend/src/containers/Battlefield.js\",\n    _s = $RefreshSig$();\n\nimport { Container, Row, Col, CardGroup, Card } from 'react-bootstrap';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport UnitCard from '../components/UnitCard.js';\n\nfunction Battlefield() {\n  _s();\n\n  const dispatch = useDispatch();\n  const gameOn = useSelector(state => state.gameOn);\n  const drawHands = useSelector(state => state.drawHands);\n  const enemyField = useSelector(state => state.enemyField);\n  const userField = useSelector(state => state.userField);\n  const env = useSelector(state => state.env);\n  const ownedCards = useSelector(state => state.ownedCards);\n  const hand = useSelector(state => state.hand);\n  const enemyHand = useSelector(state => state.enemyHand);\n\n  const shuffle = array => {\n    let currentIndex = array.length,\n        temporaryValue,\n        randomIndex; // While there remain elements to shuffle...\n\n    while (0 !== currentIndex) {\n      // Pick a remaining element...\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex -= 1; // And swap it with the current element.\n\n      temporaryValue = array[currentIndex];\n      array[currentIndex] = array[randomIndex];\n      array[randomIndex] = temporaryValue;\n    }\n\n    return array;\n  };\n\n  const rowScore = array => {\n    let score = 0;\n\n    for (let i = 0; i < array.length; i++) {\n      score += array[i].strength;\n    }\n\n    return score;\n  }; //Set the stage...SET_GAME_CARDS will eventually be called in pre-game component\n\n\n  useEffect(() => {\n    if (gameOn === false && drawHands === true) {\n      dispatch({\n        type: 'SET_HANDS'\n      });\n    } else if (gameOn === false) {\n      //in the future, this will shuffle selectedCards instead of ownedCards\n      //for some reason, these shuffle the exact same way \n      let shuffledGameCards = shuffle(ownedCards);\n      let shuffledEnemyGameCards = shuffle(shuffledGameCards);\n      dispatch({\n        type: 'SET_GAME_CARDS',\n        gameCards: shuffledGameCards,\n        enemyGameCards: shuffledEnemyGameCards\n      });\n    }\n  }, [gameOn, drawHands]);\n  return (\n    /*#__PURE__*/\n    //These rows populate with played cards\n    //Furthest left is total strength, then active buff, then cards\n    _jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          style: {\n            border: 'solid'\n          },\n          children: rowScore(enemyField.space)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xs: 10,\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            className: \"card-tray\",\n            children: enemyField.space.map(card => /*#__PURE__*/_jsxDEV(UnitCard, {\n              card: card,\n              env: env,\n              userField: false\n            }, card.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 78\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          style: {\n            border: 'solid'\n          },\n          children: rowScore(enemyField.ground)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xs: 10,\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            className: \"card-tray\",\n            children: enemyField.ground.map(card => /*#__PURE__*/_jsxDEV(UnitCard, {\n              card: card,\n              env: env,\n              enemyField: true\n            }, card.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 79\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          style: {\n            border: 'solid'\n          },\n          children: rowScore(enemyField.foot)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xs: 10,\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            className: \"card-tray\",\n            children: enemyField.foot.map(card => /*#__PURE__*/_jsxDEV(UnitCard, {\n              card: card,\n              env: env,\n              enemyField: true\n            }, card.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 77\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          style: {\n            border: 'solid'\n          },\n          children: rowScore(userField.foot)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xs: 10,\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            className: \"card-tray\",\n            children: userField.foot.map(card => /*#__PURE__*/_jsxDEV(UnitCard, {\n              card: card,\n              env: env,\n              userField: true\n            }, card.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 76\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          style: {\n            border: 'solid'\n          },\n          children: rowScore(userField.ground)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xs: 10,\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            className: \"card-tray\",\n            children: userField.ground.map(card => /*#__PURE__*/_jsxDEV(UnitCard, {\n              card: card,\n              env: env,\n              userField: true\n            }, card.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 78\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          style: {\n            border: 'solid'\n          },\n          children: rowScore(userField.space)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xs: 10,\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            className: \"card-tray\",\n            children: userField.space.map(card => /*#__PURE__*/_jsxDEV(UnitCard, {\n              card: card,\n              env: env,\n              userField: true\n            }, card.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 77\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        className: \"card-tray\",\n        children: hand.map(card => /*#__PURE__*/_jsxDEV(UnitCard, {\n          card: card,\n          hand: true\n        }, card.id + 1, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 35\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this)\n  );\n}\n\n_s(Battlefield, \"arzErU9l6kfhvPJ4o/f1blafIyk=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = Battlefield;\nexport default Battlefield;\n\nvar _c;\n\n$RefreshReg$(_c, \"Battlefield\");","map":{"version":3,"sources":["/Users/ben/flatiron/work/mod5/moon-gwent/frontend/src/containers/Battlefield.js"],"names":["Container","Row","Col","CardGroup","Card","useSelector","useDispatch","useEffect","UnitCard","Battlefield","dispatch","gameOn","state","drawHands","enemyField","userField","env","ownedCards","hand","enemyHand","shuffle","array","currentIndex","length","temporaryValue","randomIndex","Math","floor","random","rowScore","score","i","strength","type","shuffledGameCards","shuffledEnemyGameCards","gameCards","enemyGameCards","border","space","map","card","id","ground","foot"],"mappings":"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","sourcesContent":["import { Container, Row, Col, CardGroup, Card } from 'react-bootstrap'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { useEffect } from 'react'\nimport UnitCard from '../components/UnitCard.js'\n\nfunction Battlefield() {\n\n    const dispatch = useDispatch()\n\n    const gameOn = useSelector((state) => state.gameOn)\n    const drawHands = useSelector((state) => state.drawHands)\n\n    const enemyField = useSelector((state) => state.enemyField)\n    const userField = useSelector((state) => state.userField)\n    const env = useSelector((state) => state.env)\n\n    const ownedCards = useSelector((state) => state.ownedCards)\n\n\n    const hand = useSelector((state) => state.hand)\n    const enemyHand = useSelector((state) => state.enemyHand)\n\n    const shuffle = (array) => {\n        let currentIndex = array.length, temporaryValue, randomIndex;\n\n        // While there remain elements to shuffle...\n        while (0 !== currentIndex) {\n\n            // Pick a remaining element...\n            randomIndex = Math.floor(Math.random() * currentIndex);\n            currentIndex -= 1;\n\n            // And swap it with the current element.\n            temporaryValue = array[currentIndex];\n            array[currentIndex] = array[randomIndex];\n            array[randomIndex] = temporaryValue;\n        }\n\n        return array;\n    }\n\n    const rowScore = (array) => {\n        let score = 0\n        for (let i = 0; i < array.length; i++) {\n            score += array[i].strength\n        }\n        return score\n    }\n\n    //Set the stage...SET_GAME_CARDS will eventually be called in pre-game component\n    useEffect(() => {\n        if (gameOn === false && drawHands === true) {\n            dispatch({ type: 'SET_HANDS' })\n        }\n        else if (gameOn === false) {\n            //in the future, this will shuffle selectedCards instead of ownedCards\n            //for some reason, these shuffle the exact same way \n            let shuffledGameCards = shuffle(ownedCards)\n            let shuffledEnemyGameCards = shuffle(shuffledGameCards)\n            dispatch({ type: 'SET_GAME_CARDS', gameCards: shuffledGameCards, enemyGameCards: shuffledEnemyGameCards })\n        }\n    }, [gameOn, drawHands])\n\n\n    return (\n        //These rows populate with played cards\n        //Furthest left is total strength, then active buff, then cards\n        <Container > \n            <Row>\n                <Col style={{ border: 'solid' }}>\n                    {rowScore(enemyField.space)}\n                </Col>\n                <Col xs={10}>\n                    <Row className=\"card-tray\">{enemyField.space.map(card => <UnitCard card={card} env={env} userField={false} key={card.id} />)}</Row>\n                </Col>\n\n            </Row>\n            <Row>\n                <Col style={{ border: 'solid' }}>\n                    {rowScore(enemyField.ground)}\n                </Col>\n                <Col xs={10}>\n                    <Row className=\"card-tray\">{enemyField.ground.map(card => <UnitCard card={card} env={env} enemyField={true} key={card.id} />)}</Row>\n                </Col>\n\n            </Row>\n            <Row>\n                <Col style={{ border: 'solid' }}>\n                    {rowScore(enemyField.foot)}\n                </Col>\n                <Col xs={10}>\n                    <Row className=\"card-tray\">{enemyField.foot.map(card => <UnitCard card={card} env={env} enemyField={true} key={card.id} />)}</Row>\n                </Col>\n\n            </Row>\n            <br></br>\n            <Row>\n                <Col style={{ border: 'solid' }}>\n                    {rowScore(userField.foot)}\n                </Col>\n                <Col xs={10}>\n                    <Row className=\"card-tray\">{userField.foot.map(card => <UnitCard card={card} env={env} userField={true} key={card.id} />)}</Row>\n                </Col>\n\n            </Row>\n            <Row>\n                <Col style={{ border: 'solid' }}>\n                    {rowScore(userField.ground)}\n                </Col>\n                <Col xs={10}>\n                    <Row className=\"card-tray\">{userField.ground.map(card => <UnitCard card={card} env={env} userField={true} key={card.id} />)}</Row>\n                </Col>\n\n            </Row>\n            <Row>\n                <Col style={{ border: 'solid' }}>\n                    {rowScore(userField.space)}\n                </Col>\n                <Col xs={10}>\n                    <Row className=\"card-tray\">{userField.space.map(card => <UnitCard card={card} env={env} userField={true} key={card.id} />)}</Row>\n                </Col>\n\n            </Row>\n            <br></br>\n            {/* This row populates with cards drawn from a users deck.  */}\n            <Row className=\"card-tray\">\n                {hand.map(card => <UnitCard card={card} hand={true} key={card.id + 1} />)}\n            </Row>\n        </Container>\n    )\n}\n\nexport default Battlefield;"]},"metadata":{},"sourceType":"module"}