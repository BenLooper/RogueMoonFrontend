{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/ben/flatiron/work/mod5/moon-gwent/frontend/src/containers/Battlefield.js\",\n    _s = $RefreshSig$();\n\nimport { Container, Row, Col, CardGroup, Card } from 'react-bootstrap';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport UnitCard from '../components/UnitCard.js';\n\nfunction Battlefield() {\n  _s();\n\n  const dispatch = useDispatch();\n  const gameOn = useSelector(state => state.gameOn);\n  const enemySpace = useSelector(state => state.enemySpace);\n  const enemyGround = useSelector(state => state.enemyGround);\n  const enemyFoot = useSelector(state => state.enemyFoot);\n  const userFoot = useSelector(state => state.userFoot);\n  const userGround = useSelector(state => state.userGround);\n  const userSpace = useSelector(state => state.userSpace);\n  const hand = useSelector(state => state.hand); //Set the stage...SET_GAME_CARDS will eventually be called in pre-game component\n\n  useEffect(() => {\n    if (gameOn == false) {\n      dispatch({\n        type: 'SET_GAME_CARDS'\n      });\n      dispatch({\n        type: 'SET_HAND'\n      });\n    }\n  });\n  return (\n    /*#__PURE__*/\n    //These rows populate with played cards\n    //Furthest left is total strength, then active buff, then cards\n    _jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          style: {\n            border: 'solid'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xs: 10,\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            className: \"card-tray\",\n            children: enemySpace\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          style: {\n            border: 'solid'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xs: 10,\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            className: \"card-tray\",\n            children: enemyGround\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          style: {\n            border: 'solid'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xs: 10,\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            className: \"card-tray\",\n            children: enemyFoot\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          style: {\n            border: 'solid'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xs: 10,\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            className: \"card-tray\",\n            children: userFoot.map(card => /*#__PURE__*/_jsxDEV(UnitCard, {\n              card: card\n            }, card.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 68\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          style: {\n            border: 'solid'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xs: 10,\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            className: \"card-tray\",\n            children: userGround.map(card => /*#__PURE__*/_jsxDEV(UnitCard, {\n              card: card\n            }, card.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 70\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          style: {\n            border: 'solid'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xs: 10,\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            className: \"card-tray\",\n            children: userSpace.map(card => /*#__PURE__*/_jsxDEV(UnitCard, {\n              card: card\n            }, card.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 69\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        className: \"card-tray\",\n        children: hand.map(card => /*#__PURE__*/_jsxDEV(UnitCard, {\n          card: card,\n          hand: true\n        }, card.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 35\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this)\n  );\n}\n\n_s(Battlefield, \"6UBY119A7jYGdG6ZXj9v9yeRYpA=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = Battlefield;\nexport default Battlefield;\n\nvar _c;\n\n$RefreshReg$(_c, \"Battlefield\");","map":{"version":3,"sources":["/Users/ben/flatiron/work/mod5/moon-gwent/frontend/src/containers/Battlefield.js"],"names":["Container","Row","Col","CardGroup","Card","useSelector","useDispatch","useEffect","UnitCard","Battlefield","dispatch","gameOn","state","enemySpace","enemyGround","enemyFoot","userFoot","userGround","userSpace","hand","type","border","map","card","id"],"mappings":"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","sourcesContent":["import { Container, Row, Col, CardGroup, Card } from 'react-bootstrap'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { useEffect } from 'react'\nimport UnitCard from '../components/UnitCard.js'\n\nfunction Battlefield() {\n\n    const dispatch = useDispatch()\n\n    const gameOn = useSelector((state) => state.gameOn)\n    const enemySpace = useSelector((state) => state.enemySpace)\n    const enemyGround = useSelector((state) => state.enemyGround)\n    const enemyFoot = useSelector((state) => state.enemyFoot)\n    const userFoot = useSelector((state) => state.userFoot)\n    const userGround = useSelector((state) => state.userGround)\n    const userSpace = useSelector((state) => state.userSpace)\n    const hand = useSelector((state) => state.hand)\n\n    //Set the stage...SET_GAME_CARDS will eventually be called in pre-game component\n    useEffect(() => {\n        if (gameOn == false) {\n            dispatch({ type: 'SET_GAME_CARDS' })\n            dispatch({ type: 'SET_HAND' })\n        }\n    })\n\n    return (\n        //These rows populate with played cards\n        //Furthest left is total strength, then active buff, then cards\n        <Container >\n            <Row>\n                <Col style={{ border: 'solid' }}>\n\n                </Col>\n                <Col xs={10}>\n                    <Row className=\"card-tray\">{enemySpace}</Row>\n                </Col>\n\n            </Row>\n            <Row>\n                <Col style={{ border: 'solid' }}>\n                </Col>\n                <Col xs={10}>\n                    <Row className=\"card-tray\">{enemyGround}</Row>\n                </Col>\n\n            </Row>\n            <Row>\n                <Col style={{ border: 'solid' }}>\n                </Col>\n                <Col xs={10}>\n                    <Row className=\"card-tray\">{enemyFoot}</Row>\n                </Col>\n\n            </Row>\n            <br></br>\n            <Row>\n                <Col style={{ border: 'solid' }}>\n\n                </Col>\n                <Col xs={10}>\n                    <Row className=\"card-tray\">{userFoot.map(card=><UnitCard card={card} key={card.id}/>)}</Row>\n                </Col>\n\n            </Row>\n            <Row>\n                <Col style={{ border: 'solid' }}>\n                </Col>\n                <Col xs={10}>\n                    <Row className=\"card-tray\">{userGround.map(card=><UnitCard card={card} key={card.id}/>)}</Row>\n                </Col>\n\n            </Row>\n            <Row>\n                <Col style={{ border: 'solid' }}>\n                    \n                </Col>\n                <Col xs={10}>\n                    <Row className=\"card-tray\">{userSpace.map(card=><UnitCard card={card} key={card.id}/>)}</Row>\n                </Col>\n\n            </Row>\n            <br></br>\n            {/* This row populates with cards drawn from a users deck.  */}\n            <Row className=\"card-tray\">\n                {hand.map(card => <UnitCard card={card} hand={true} key={card.id}/>)}\n            </Row>\n        </Container>\n    )\n}\n\nexport default Battlefield;"]},"metadata":{},"sourceType":"module"}