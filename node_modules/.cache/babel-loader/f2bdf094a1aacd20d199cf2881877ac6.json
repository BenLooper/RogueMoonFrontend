{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/ben/flatiron/work/mod5/moon-gwent/frontend/src/components/UnitCard.js\",\n    _s = $RefreshSig$();\n\nimport { Card } from 'react-bootstrap';\nimport { useSelector, useDispatch } from 'react-redux';\n\nconst UnitCard = ({\n  card,\n  hand\n}) => {\n  _s();\n\n  const playCard = () => {\n    let role = card.role; //puts the card in the correct array inside field \n\n    dispatch({\n      type: \"PLAY_CARD\",\n      role: role,\n      card: card\n    }); //if a card has an ability, dispatch that ability \n\n    if (card.ability) {\n      console.log(card.ability.toUpperCase());\n    }\n  };\n\n  const dispatch = useDispatch();\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"unit-card\",\n    onClick: hand ? () => playCard() : null,\n    children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n      variant: \"top\",\n      src: card.image\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Card.ImgOverlay, {\n      children: [/*#__PURE__*/_jsxDEV(Card.Text, {\n        className: \"strength\",\n        children: card.strength\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n        className: \"role\",\n        children: card.role\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n        className: \"ability\",\n        children: card.ability\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n};\n\n_s(UnitCard, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});\n\n_c = UnitCard;\nexport default UnitCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"UnitCard\");","map":{"version":3,"sources":["/Users/ben/flatiron/work/mod5/moon-gwent/frontend/src/components/UnitCard.js"],"names":["Card","useSelector","useDispatch","UnitCard","card","hand","playCard","role","dispatch","type","ability","console","log","toUpperCase","image","strength"],"mappings":";;;;;AAAA,SAASA,IAAT,QAAqB,iBAArB;AACA,SAAQC,WAAR,EAAoBC,WAApB,QAAsC,aAAtC;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAD,KAAoB;AAAA;;AAEjC,QAAMC,QAAQ,GAAG,MAAM;AACnB,QAAIC,IAAI,GAAGH,IAAI,CAACG,IAAhB,CADmB,CAEnB;;AACAC,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAC,WAAN;AAAmBF,MAAAA,IAAI,EAACA,IAAxB;AAA8BH,MAAAA,IAAI,EAACA;AAAnC,KAAD,CAAR,CAHmB,CAKnB;;AACA,QAAIA,IAAI,CAACM,OAAT,EAAiB;AACbC,MAAAA,OAAO,CAACC,GAAR,CAAYR,IAAI,CAACM,OAAL,CAAaG,WAAb,EAAZ;AACH;AACJ,GATD;;AAWA,QAAML,QAAQ,GAAGN,WAAW,EAA5B;AAEA,sBACI,QAAC,IAAD;AAAM,IAAA,SAAS,EAAC,WAAhB;AAA4B,IAAA,OAAO,EAAEG,IAAI,GAAC,MAAIC,QAAQ,EAAb,GAAgB,IAAzD;AAAA,4BACI,QAAC,IAAD,CAAM,GAAN;AAAU,MAAA,OAAO,EAAC,KAAlB;AAAwB,MAAA,GAAG,EAAEF,IAAI,CAACU;AAAlC;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,IAAD,CAAM,UAAN;AAAA,8BACI,QAAC,IAAD,CAAM,IAAN;AAAW,QAAA,SAAS,EAAC,UAArB;AAAA,kBAAiCV,IAAI,CAACW;AAAtC;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,IAAD,CAAM,IAAN;AAAW,QAAA,SAAS,EAAC,MAArB;AAAA,kBAA6BX,IAAI,CAACG;AAAlC;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI,QAAC,IAAD,CAAM,IAAN;AAAW,QAAA,SAAS,EAAC,SAArB;AAAA,kBAAgCH,IAAI,CAACM;AAArC;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH,CA9BD;;GAAMP,Q;UAaeD,W;;;KAbfC,Q;AAgCN,eAAeA,QAAf","sourcesContent":["import { Card } from 'react-bootstrap'\nimport {useSelector,useDispatch} from 'react-redux'\n\nconst UnitCard = ({ card, hand }) => {\n    \n    const playCard = () => {\n        let role = card.role\n        //puts the card in the correct array inside field \n        dispatch({type:\"PLAY_CARD\", role:role, card:card})\n\n        //if a card has an ability, dispatch that ability \n        if (card.ability){\n            console.log(card.ability.toUpperCase())\n        }\n    }\n    \n    const dispatch = useDispatch()\n\n    return (\n        <Card className=\"unit-card\" onClick={hand?()=>playCard():null}>\n            <Card.Img variant='top' src={card.image} />\n            <Card.ImgOverlay>\n                <Card.Text className=\"strength\">{card.strength}</Card.Text>\n                <Card.Text className=\"role\">{card.role}</Card.Text>\n                <Card.Text className=\"ability\">{card.ability}</Card.Text>\n            </Card.ImgOverlay>\n            {/* <Card.Body className=\"text-center\">\n                <Card.Title>{card.name}</Card.Title>\n                <Card.Subtitle>{card.ability}</Card.Subtitle>\n                <Card.Text>{card.flavor_text}</Card.Text>\n            </Card.Body> */}\n        </Card>\n    )\n}\n\nexport default UnitCard;"]},"metadata":{},"sourceType":"module"}