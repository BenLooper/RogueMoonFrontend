{"ast":null,"code":"export const initialState = {\n  //login\n  usernameInput: '',\n  passwordInput: '',\n  user: {},\n  ownedCards: [],\n  token: '',\n  //gameboard\n  gameCards: [],\n  enemySpace: [],\n  enemyGround: [],\n  enemyFoot: [],\n  userFoot: [],\n  userGround: [],\n  userSpace: [],\n  hand: []\n};\nexport const reducer = (state, action) => {\n  switch (action.type) {\n    case 'CHANGE_USERNAME_INPUT':\n      return { ...state,\n        usernameInput: action.value\n      };\n      break;\n\n    case 'CHANGE_PASSWORD_INPUT':\n      return { ...state,\n        passwordInput: action.value\n      };\n      break;\n\n    case 'SET_USER':\n      return { ...state,\n        user: action.user,\n        token: action.token,\n        ownedCards: action.ownedCards\n      };\n      break;\n\n    case 'UPDATE_BATTLEFIELD':\n      let role = `user${action.role}`;\n      let updatedHand = state.hand.filter(card => card.id !== action.card.id);\n      let updatedRow = [...state[role], action.card];\n      return { ...state,\n        [role]: updatedRow\n      };\n      break;\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/ben/flatiron/work/mod5/moon-gwent/frontend/src/store/reducers/index.js"],"names":["initialState","usernameInput","passwordInput","user","ownedCards","token","gameCards","enemySpace","enemyGround","enemyFoot","userFoot","userGround","userSpace","hand","reducer","state","action","type","value","role","updatedHand","filter","card","id","updatedRow"],"mappings":"AAAA,OAAO,MAAMA,YAAY,GAAG;AACxB;AACAC,EAAAA,aAAa,EAAC,EAFU;AAGxBC,EAAAA,aAAa,EAAC,EAHU;AAIxBC,EAAAA,IAAI,EAAC,EAJmB;AAKxBC,EAAAA,UAAU,EAAC,EALa;AAMxBC,EAAAA,KAAK,EAAC,EANkB;AAQxB;AACAC,EAAAA,SAAS,EAAE,EATa;AAUxBC,EAAAA,UAAU,EAAE,EAVY;AAWxBC,EAAAA,WAAW,EAAE,EAXW;AAYxBC,EAAAA,SAAS,EAAE,EAZa;AAaxBC,EAAAA,QAAQ,EAAE,EAbc;AAcxBC,EAAAA,UAAU,EAAE,EAdY;AAexBC,EAAAA,SAAS,EAAE,EAfa;AAgBxBC,EAAAA,IAAI,EAAC;AAhBmB,CAArB;AAmBP,OAAO,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAOC,MAAP,KAAkB;AACrC,UAAQA,MAAM,CAACC,IAAf;AAEI,SAAK,uBAAL;AACI,aAAO,EAAC,GAAGF,KAAJ;AAAUd,QAAAA,aAAa,EAACe,MAAM,CAACE;AAA/B,OAAP;AACA;;AAEJ,SAAK,uBAAL;AACI,aAAO,EAAC,GAAGH,KAAJ;AAAUb,QAAAA,aAAa,EAACc,MAAM,CAACE;AAA/B,OAAP;AACA;;AAEJ,SAAK,UAAL;AACI,aAAO,EAAC,GAAGH,KAAJ;AAAUZ,QAAAA,IAAI,EAACa,MAAM,CAACb,IAAtB;AAA2BE,QAAAA,KAAK,EAACW,MAAM,CAACX,KAAxC;AAA8CD,QAAAA,UAAU,EAACY,MAAM,CAACZ;AAAhE,OAAP;AACA;;AAEJ,SAAK,oBAAL;AACI,UAAIe,IAAI,GAAI,OAAMH,MAAM,CAACG,IAAK,EAA9B;AACA,UAAIC,WAAW,GAAGL,KAAK,CAACF,IAAN,CAAWQ,MAAX,CAAkBC,IAAI,IAAEA,IAAI,CAACC,EAAL,KAAUP,MAAM,CAACM,IAAP,CAAYC,EAA9C,CAAlB;AACA,UAAIC,UAAU,GAAG,CAAC,GAAGT,KAAK,CAACI,IAAD,CAAT,EAAiBH,MAAM,CAACM,IAAxB,CAAjB;AACA,aAAO,EAAC,GAAGP,KAAJ;AAAU,SAACI,IAAD,GAAOK;AAAjB,OAAP;AACA;;AAEJ;AACI,aAAOT,KAAP;AAtBR;AAwBH,CAzBM","sourcesContent":["export const initialState = {\n    //login\n    usernameInput:'',\n    passwordInput:'',\n    user:{},\n    ownedCards:[],\n    token:'',\n\n    //gameboard\n    gameCards: [],\n    enemySpace: [],\n    enemyGround: [],\n    enemyFoot: [],\n    userFoot: [],\n    userGround: [],\n    userSpace: [],\n    hand:[]\n}\n\nexport const reducer = (state,action) => {\n    switch (action.type){\n\n        case 'CHANGE_USERNAME_INPUT':\n            return {...state,usernameInput:action.value}\n            break;\n        \n        case 'CHANGE_PASSWORD_INPUT':\n            return {...state,passwordInput:action.value}\n            break;\n\n        case 'SET_USER':\n            return {...state,user:action.user,token:action.token,ownedCards:action.ownedCards}\n            break;\n        \n        case 'UPDATE_BATTLEFIELD':\n            let role = `user${action.role}` \n            let updatedHand = state.hand.filter(card=>card.id!==action.card.id)\n            let updatedRow = [...state[role], action.card]\n            return {...state,[role]:updatedRow, }\n            break;\n\n        default: \n            return state\n    }\n}"]},"metadata":{},"sourceType":"module"}